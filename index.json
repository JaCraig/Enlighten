{
  "api/Enlighten.CanisterModules.Module.html": {
    "href": "api/Enlighten.CanisterModules.Module.html",
    "title": "Class Module | Enlighten API Reference",
    "keywords": "Class Module Namespace Enlighten.CanisterModules Assembly Enlighten.dll Canister module public class Module : IModule Inheritance object Module Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Order to run this in public int Order { get; } Property Value int Canister module Methods Load(IServiceCollection) Loads the module using the bootstrapper public void Load(IServiceCollection bootstrapper) Parameters bootstrapper IServiceCollection The bootstrapper. See Also IModule"
  },
  "api/Enlighten.CanisterModules.html": {
    "href": "api/Enlighten.CanisterModules.html",
    "title": "Namespace Enlighten.CanisterModules | Enlighten API Reference",
    "keywords": "Namespace Enlighten.CanisterModules Classes Module Canister module"
  },
  "api/Enlighten.Document.html": {
    "href": "api/Enlighten.Document.html",
    "title": "Class Document | Enlighten API Reference",
    "keywords": "Class Document Namespace Enlighten Assembly Enlighten.dll Document information holder public class Document Inheritance object Document Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Document(Sentence[], Token[], string, IFeatureExtractor, ITextSummarizer, ITokenizer, TokenizerLanguage) Initializes a new instance of the Document class. public Document(Sentence[] sentences, Token[] tokens, string originalText, IFeatureExtractor featureExtractor, ITextSummarizer textSummarizer, ITokenizer tokenizer, TokenizerLanguage tokenizerLanguage) Parameters sentences Sentence[] The sentences. tokens Token[] The tokens. originalText string The original text. featureExtractor IFeatureExtractor The feature extractor. textSummarizer ITextSummarizer The text summarizer. tokenizer ITokenizer The tokenizer. tokenizerLanguage TokenizerLanguage The tokenizer language. Properties ID Gets the identifier. public Guid ID { get; } Property Value Guid The identifier. OriginalText Gets the text. public string OriginalText { get; } Property Value string The text. Sentences Gets the sentences. public Sentence[] Sentences { get; } Property Value Sentence[] The sentences. Tokens Gets the tokens. public Token[] Tokens { get; } Property Value Token[] The tokens. Methods Detokenize() Detokenizes this instance. public string Detokenize() Returns string The string version of this instance. GetFeatures(Document[], int, FeatureExtractionType) Gets the topics important in this document public string[] GetFeatures(Document[] comparisonDocuments, int featureCount, FeatureExtractionType featureExtractionType) Parameters comparisonDocuments Document[] The comparison documents. featureCount int The feature count. featureExtractionType FeatureExtractionType Type of the feature extraction. Returns string[] The features/topics important in this document. Summarize(int, TextSummarizationLanguage) Summarizes the specified sentence count. public Document Summarize(int sentenceCount, TextSummarizationLanguage textSummarizationLanguage) Parameters sentenceCount int The sentence count. textSummarizationLanguage TextSummarizationLanguage The text summarization language. Returns Document The summarized text Summarize(float, TextSummarizationLanguage) Summarizes the specified percentage. public Document Summarize(float percentage, TextSummarizationLanguage textSummarizationLanguage) Parameters percentage float The percentage of the text to use. textSummarizationLanguage TextSummarizationLanguage The text summarization language. Returns Document The summarized text"
  },
  "api/Enlighten.Enums.Languages.html": {
    "href": "api/Enlighten.Enums.Languages.html",
    "title": "Enum Languages | Enlighten API Reference",
    "keywords": "Enum Languages Namespace Enlighten.Enums Assembly Enlighten.dll Languages public enum Languages Fields English = 0 The english language"
  },
  "api/Enlighten.Enums.html": {
    "href": "api/Enlighten.Enums.html",
    "title": "Namespace Enlighten.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Enums Enums Languages Languages"
  },
  "api/Enlighten.FeatureExtraction.DefaultFeatureExtractor.html": {
    "href": "api/Enlighten.FeatureExtraction.DefaultFeatureExtractor.html",
    "title": "Class DefaultFeatureExtractor | Enlighten API Reference",
    "keywords": "Class DefaultFeatureExtractor Namespace Enlighten.FeatureExtraction Assembly Enlighten.dll Class handles basic text public class DefaultFeatureExtractor : IFeatureExtractor Inheritance object DefaultFeatureExtractor Implements IFeatureExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultFeatureExtractor(IEnumerable<IFeatureExtractorLanguage>) Initializes a new instance of the DefaultFeatureExtractor class. public DefaultFeatureExtractor(IEnumerable<IFeatureExtractorLanguage> summarizers) Parameters summarizers IEnumerable<IFeatureExtractorLanguage> The summarizers. Properties Extractors Gets the summarizers. public Dictionary<string, IFeatureExtractorLanguage> Extractors { get; } Property Value Dictionary<string, IFeatureExtractorLanguage> The summarizers. Methods Extract(Document, Document[], int, FeatureExtractionType) Extracts features from the doc specified. public string[] Extract(Document doc, Document[] docs, int featureCount, FeatureExtractionType language) Parameters doc Document The document. docs Document[] The docs to use to compare. featureCount int The number of features/terms to return. language FeatureExtractionType The language/extraction algorithm to use. Returns string[] The important features/terms of the doc."
  },
  "api/Enlighten.FeatureExtraction.Enum.FeatureExtractionType.html": {
    "href": "api/Enlighten.FeatureExtraction.Enum.FeatureExtractionType.html",
    "title": "Class FeatureExtractionType | Enlighten API Reference",
    "keywords": "Class FeatureExtractionType Namespace Enlighten.FeatureExtraction.Enum Assembly Enlighten.dll Feature extraction type public class FeatureExtractionType : StringEnumBaseClass<FeatureExtractionType> Inheritance object StringEnumBaseClass<FeatureExtractionType> FeatureExtractionType Inherited Members StringEnumBaseClass<FeatureExtractionType>.ToStringEnumBaseClass(string) StringEnumBaseClass<FeatureExtractionType>.ToString() StringEnumBaseClass<FeatureExtractionType>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FeatureExtractionType() Initializes a new instance of the FeatureExtractionType class. public FeatureExtractionType() FeatureExtractionType(string) Initializes a new instance of the FeatureExtractionType class. public FeatureExtractionType(string name) Parameters name string The name. Properties EnglishDefault Gets the default for english. (Uses TF-IDF) public static FeatureExtractionType EnglishDefault { get; } Property Value FeatureExtractionType The default. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.FeatureExtraction.Enum.html": {
    "href": "api/Enlighten.FeatureExtraction.Enum.html",
    "title": "Namespace Enlighten.FeatureExtraction.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.FeatureExtraction.Enum Classes FeatureExtractionType Feature extraction type"
  },
  "api/Enlighten.FeatureExtraction.Extractors.EnglishDefault.html": {
    "href": "api/Enlighten.FeatureExtraction.Extractors.EnglishDefault.html",
    "title": "Class EnglishDefault | Enlighten API Reference",
    "keywords": "Class EnglishDefault Namespace Enlighten.FeatureExtraction.Extractors Assembly Enlighten.dll English default extractor (uses TF-IDF) public class EnglishDefault : IFeatureExtractorLanguage Inheritance object EnglishDefault Implements IFeatureExtractorLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnglishDefault(FrequencyAnalyzer) Initializes a new instance of the EnglishDefault class. public EnglishDefault(FrequencyAnalyzer frequencyAnalyzer) Parameters frequencyAnalyzer FrequencyAnalyzer The frequency analyzer. Properties FrequencyAnalyzer Gets the frequency analyzer. public FrequencyAnalyzer FrequencyAnalyzer { get; } Property Value FrequencyAnalyzer The frequency analyzer. Name Gets the name. public string Name { get; } Property Value string The name. Methods Extract(Document, Document[], int) Extracts features from the doc specified. public string[] Extract(Document doc, Document[] docs, int featureCount) Parameters doc Document The document. docs Document[] The docs to use to compare. featureCount int The number of features/terms to return. Returns string[] The important features/terms of the doc. See Also IFeatureExtractorLanguage"
  },
  "api/Enlighten.FeatureExtraction.Extractors.html": {
    "href": "api/Enlighten.FeatureExtraction.Extractors.html",
    "title": "Namespace Enlighten.FeatureExtraction.Extractors | Enlighten API Reference",
    "keywords": "Namespace Enlighten.FeatureExtraction.Extractors Classes EnglishDefault English default extractor (uses TF-IDF)"
  },
  "api/Enlighten.FeatureExtraction.Interfaces.IFeatureExtractor.html": {
    "href": "api/Enlighten.FeatureExtraction.Interfaces.IFeatureExtractor.html",
    "title": "Interface IFeatureExtractor | Enlighten API Reference",
    "keywords": "Interface IFeatureExtractor Namespace Enlighten.FeatureExtraction.Interfaces Assembly Enlighten.dll Feature extractor interface public interface IFeatureExtractor Methods Extract(Document, Document[], int, FeatureExtractionType) Extracts features from the doc specified. string[] Extract(Document doc, Document[] docs, int featureCount, FeatureExtractionType language) Parameters doc Document The document. docs Document[] The docs to use to compare. featureCount int The number of features/terms to return. language FeatureExtractionType The language/extraction algorithm to use. Returns string[] The important features/terms of the doc."
  },
  "api/Enlighten.FeatureExtraction.Interfaces.IFeatureExtractorLanguage.html": {
    "href": "api/Enlighten.FeatureExtraction.Interfaces.IFeatureExtractorLanguage.html",
    "title": "Interface IFeatureExtractorLanguage | Enlighten API Reference",
    "keywords": "Interface IFeatureExtractorLanguage Namespace Enlighten.FeatureExtraction.Interfaces Assembly Enlighten.dll Feature extractor language interface public interface IFeatureExtractorLanguage Properties Name Gets the name. string Name { get; } Property Value string The name. Methods Extract(Document, Document[], int) Extracts features from the doc specified. string[] Extract(Document doc, Document[] docs, int featureCount) Parameters doc Document The document. docs Document[] The docs to use to compare. featureCount int The number of features/terms to return. Returns string[] The important features/terms of the doc."
  },
  "api/Enlighten.FeatureExtraction.Interfaces.html": {
    "href": "api/Enlighten.FeatureExtraction.Interfaces.html",
    "title": "Namespace Enlighten.FeatureExtraction.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.FeatureExtraction.Interfaces Interfaces IFeatureExtractor Feature extractor interface IFeatureExtractorLanguage Feature extractor language interface"
  },
  "api/Enlighten.FeatureExtraction.html": {
    "href": "api/Enlighten.FeatureExtraction.html",
    "title": "Namespace Enlighten.FeatureExtraction | Enlighten API Reference",
    "keywords": "Namespace Enlighten.FeatureExtraction Classes DefaultFeatureExtractor Class handles basic text"
  },
  "api/Enlighten.Frequency.FrequencyAnalyzer.html": {
    "href": "api/Enlighten.Frequency.FrequencyAnalyzer.html",
    "title": "Class FrequencyAnalyzer | Enlighten API Reference",
    "keywords": "Class FrequencyAnalyzer Namespace Enlighten.Frequency Assembly Enlighten.dll Frequency Analyzer public class FrequencyAnalyzer Inheritance object FrequencyAnalyzer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Analyze(IEnumerable<Token>, int) Analyzes the specified tokens. public FrequencyResults Analyze(IEnumerable<Token> tokens, int windowSize) Parameters tokens IEnumerable<Token> The tokens. windowSize int Size of the window. Returns FrequencyResults The frequency results"
  },
  "api/Enlighten.Frequency.FrequencyResults.html": {
    "href": "api/Enlighten.Frequency.FrequencyResults.html",
    "title": "Class FrequencyResults | Enlighten API Reference",
    "keywords": "Class FrequencyResults Namespace Enlighten.Frequency Assembly Enlighten.dll Frequency results public class FrequencyResults Inheritance object FrequencyResults Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NumberOfTypes Gets the number of types (distinct words). public int NumberOfTypes { get; } Property Value int The number of types (distinct words). NumberOfWords Gets the number of words. public int NumberOfWords { get; } Property Value int The number of words. TermFrequency Gets the term frequency. public SortedDictionary<string, double> TermFrequency { get; } Property Value SortedDictionary<string, double> The term frequency. TypeTokenRatio Gets the type token ratio (Types/Words). public decimal TypeTokenRatio { get; } Property Value decimal The type token ratio (Types/Words). WindowSize Gets the size of the window. public int WindowSize { get; } Property Value int The size of the window. WordCount Gets the word count. public SortedDictionary<string, int> WordCount { get; } Property Value SortedDictionary<string, int> The word count."
  },
  "api/Enlighten.Frequency.html": {
    "href": "api/Enlighten.Frequency.html",
    "title": "Namespace Enlighten.Frequency | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Frequency Classes FrequencyAnalyzer Frequency Analyzer FrequencyResults Frequency results"
  },
  "api/Enlighten.Index.html": {
    "href": "api/Enlighten.Index.html",
    "title": "Class Index | Enlighten API Reference",
    "keywords": "Class Index Namespace Enlighten Assembly Enlighten.dll Index public class Index Inheritance object Index Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Index(Pipeline, IIndexer) Initializes a new instance of the Index class. public Index(Pipeline pipeline, IIndexer indexer) Parameters pipeline Pipeline The pipeline. indexer IIndexer The indexer. Properties Pipeline Gets the pipeline. public Pipeline Pipeline { get; } Property Value Pipeline The pipeline. Methods AddDoc(Document) Indexes the specified document. public Document AddDoc(Document document) Parameters document Document The document. Returns Document The document text. AddDoc(string) Indexes the specified document. public Document AddDoc(string text) Parameters text string The text. Returns Document The document text. Create(IndexerType) Creates the specified indexer type. public Index Create(IndexerType indexerType) Parameters indexerType IndexerType Type of the indexer. Returns Index Query(string) Queries the specified text. public Guid[] Query(string text) Parameters text string The text. Returns Guid[] The query results."
  },
  "api/Enlighten.Indexer.DefaultIndexer.html": {
    "href": "api/Enlighten.Indexer.DefaultIndexer.html",
    "title": "Class DefaultIndexer | Enlighten API Reference",
    "keywords": "Class DefaultIndexer Namespace Enlighten.Indexer Assembly Enlighten.dll Default indexer public class DefaultIndexer : IIndexer Inheritance object DefaultIndexer Implements IIndexer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultIndexer(IEnumerable<IIndexCreator>) Initializes a new instance of the DefaultIndexer class. public DefaultIndexer(IEnumerable<IIndexCreator> indexCreators) Parameters indexCreators IEnumerable<IIndexCreator> The index creators. Properties Languages Gets the languages. public Dictionary<string, IIndexCreator> Languages { get; } Property Value Dictionary<string, IIndexCreator> The languages. Methods CreateIndex(string, Document[]) Creates an index. public IIndex CreateIndex(string type, Document[] docs) Parameters type string The type. docs Document[] The docs. Returns IIndex The index. See Also IIndexer"
  },
  "api/Enlighten.Indexer.Enums.IndexerType.html": {
    "href": "api/Enlighten.Indexer.Enums.IndexerType.html",
    "title": "Class IndexerType | Enlighten API Reference",
    "keywords": "Class IndexerType Namespace Enlighten.Indexer.Enums Assembly Enlighten.dll Indexer language public class IndexerType : StringEnumBaseClass<IndexerType> Inheritance object StringEnumBaseClass<IndexerType> IndexerType Inherited Members StringEnumBaseClass<IndexerType>.ToStringEnumBaseClass(string) StringEnumBaseClass<IndexerType>.ToString() StringEnumBaseClass<IndexerType>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IndexerType() Initializes a new instance of the IndexerType class. public IndexerType() IndexerType(string) Initializes a new instance of the IndexerType class. public IndexerType(string name) Parameters name string The name. Properties InvertedIndex Gets the index of the inverted. public static IndexerType InvertedIndex { get; } Property Value IndexerType The index of the inverted."
  },
  "api/Enlighten.Indexer.Enums.html": {
    "href": "api/Enlighten.Indexer.Enums.html",
    "title": "Namespace Enlighten.Indexer.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Indexer.Enums Classes IndexerType Indexer language"
  },
  "api/Enlighten.Indexer.Indexers.InvertedIndex.html": {
    "href": "api/Enlighten.Indexer.Indexers.InvertedIndex.html",
    "title": "Class InvertedIndex | Enlighten API Reference",
    "keywords": "Class InvertedIndex Namespace Enlighten.Indexer.Indexers Assembly Enlighten.dll Inverted index public class InvertedIndex : IIndex Inheritance object InvertedIndex Implements IIndex Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InvertedIndex() Initializes a new instance of the InvertedIndex class. public InvertedIndex() InvertedIndex(Document[]) Initializes a new instance of the InvertedIndex class. public InvertedIndex(Document[] documents) Parameters documents Document[] The documents. Methods AddDoc(Document) Adds the document to the index. public IIndex AddDoc(Document document) Parameters document Document The document. Returns IIndex This. Query(Document) Queries the index and returns the IDs of the documents the query is found in. public Guid[] Query(Document query) Parameters query Document The query. Returns Guid[] The IDs of the documents matching the query. See Also IIndex"
  },
  "api/Enlighten.Indexer.Indexers.InvertedIndexCreator.html": {
    "href": "api/Enlighten.Indexer.Indexers.InvertedIndexCreator.html",
    "title": "Class InvertedIndexCreator | Enlighten API Reference",
    "keywords": "Class InvertedIndexCreator Namespace Enlighten.Indexer.Indexers Assembly Enlighten.dll Inverted index builder public class InvertedIndexCreator : IIndexCreator Inheritance object InvertedIndexCreator Implements IIndexCreator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods CreateIndex(Document[]) Creates the index. public IIndex CreateIndex(Document[] docs) Parameters docs Document[] The docs. Returns IIndex The index See Also IIndexCreator"
  },
  "api/Enlighten.Indexer.Indexers.html": {
    "href": "api/Enlighten.Indexer.Indexers.html",
    "title": "Namespace Enlighten.Indexer.Indexers | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Indexer.Indexers Classes InvertedIndex Inverted index InvertedIndexCreator Inverted index builder"
  },
  "api/Enlighten.Indexer.Interfaces.IIndex.html": {
    "href": "api/Enlighten.Indexer.Interfaces.IIndex.html",
    "title": "Interface IIndex | Enlighten API Reference",
    "keywords": "Interface IIndex Namespace Enlighten.Indexer.Interfaces Assembly Enlighten.dll Index interface public interface IIndex Methods AddDoc(Document) Adds the document to the index. IIndex AddDoc(Document document) Parameters document Document The document. Returns IIndex This. Query(Document) Queries the index and returns the IDs of the documents the query is found in. Guid[] Query(Document query) Parameters query Document The query. Returns Guid[] The IDs of the documents matching the query."
  },
  "api/Enlighten.Indexer.Interfaces.IIndexCreator.html": {
    "href": "api/Enlighten.Indexer.Interfaces.IIndexCreator.html",
    "title": "Interface IIndexCreator | Enlighten API Reference",
    "keywords": "Interface IIndexCreator Namespace Enlighten.Indexer.Interfaces Assembly Enlighten.dll Index creator public interface IIndexCreator Properties Name Gets the name. string Name { get; } Property Value string The name. Methods CreateIndex(Document[]) Creates an index. IIndex CreateIndex(Document[] docs) Parameters docs Document[] The docs. Returns IIndex The index."
  },
  "api/Enlighten.Indexer.Interfaces.IIndexer.html": {
    "href": "api/Enlighten.Indexer.Interfaces.IIndexer.html",
    "title": "Interface IIndexer | Enlighten API Reference",
    "keywords": "Interface IIndexer Namespace Enlighten.Indexer.Interfaces Assembly Enlighten.dll Indexer interface public interface IIndexer Methods CreateIndex(string, Document[]) Creates an index. IIndex CreateIndex(string type, Document[] docs) Parameters type string The type. docs Document[] The docs. Returns IIndex The index."
  },
  "api/Enlighten.Indexer.Interfaces.html": {
    "href": "api/Enlighten.Indexer.Interfaces.html",
    "title": "Namespace Enlighten.Indexer.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Indexer.Interfaces Interfaces IIndex Index interface IIndexCreator Index creator IIndexer Indexer interface"
  },
  "api/Enlighten.Indexer.html": {
    "href": "api/Enlighten.Indexer.html",
    "title": "Namespace Enlighten.Indexer | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Indexer Classes DefaultIndexer Default indexer"
  },
  "api/Enlighten.Inflector.BaseClasses.InflectorBaseClass.html": {
    "href": "api/Enlighten.Inflector.BaseClasses.InflectorBaseClass.html",
    "title": "Class InflectorBaseClass | Enlighten API Reference",
    "keywords": "Class InflectorBaseClass Namespace Enlighten.Inflector.BaseClasses Assembly Enlighten.dll Inflector base class public abstract class InflectorBaseClass : IInflectorLanguage Inheritance object InflectorBaseClass Implements IInflectorLanguage Derived EnglishInflector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InflectorBaseClass() Initializes a new instance of the InflectorBaseClass class. protected InflectorBaseClass() Fields VBG Gets the VBG. protected const string VBG = \"VBG\" Field Value string The VBG. VBN Gets the VBN. protected const string VBN = \"VBN\" Field Value string The VBN. VBZ Gets the VBZ. protected const string VBZ = \"VBZ\" Field Value string The VBZ. Properties Name Gets the name. public abstract string Name { get; } Property Value string The name. Methods AddConjugationRule(string, Func<string, string, string>) Adds the conjugation rule. protected void AddConjugationRule(string rule, Func<string, string, string> replacement) Parameters rule string The rule. replacement Func<string, string, string> The replacement. AddGerundException(string) Adds the gerund exception. protected void AddGerundException(string word) Parameters word string The word. AddGerundRule(string) Adds the gerund rule. protected void AddGerundRule(string rule) Parameters rule string The rule. AddInfinitive(string, string) Adds the infinitive. protected void AddInfinitive(string rule, string replacement) Parameters rule string The rule. replacement string The replacement. AddIrregular(string, string, bool) Adds the irregular. protected void AddIrregular(string singular, string plural, bool matchEnding = true) Parameters singular string The singular. plural string The plural. matchEnding bool if set to true [match ending]. AddPastRule(string) Adds the gerund rule. protected void AddPastRule(string rule) Parameters rule string The rule. AddPlural(string, string) Adds the plural. protected void AddPlural(string rule, string replacement) Parameters rule string The rule. replacement string The replacement. AddSingular(string, string) Adds the singular. protected void AddSingular(string rule, string replacement) Parameters rule string The rule. replacement string The replacement. AddUncountable(string) Adds an uncountable word. protected void AddUncountable(string word) Parameters word string The word. Conjugate(string, string) Conjugates the specified input. public string Conjugate(string input, string partOfSpeechTo) Parameters input string The input. partOfSpeechTo string The part of speech to. Returns string Infinitive(string) Infinitives the specified input. public string? Infinitive(string input) Parameters input string The input. Returns string The infinitive tense of the verb. IsGerund(string) Determines whether the specified input is gerund. public bool IsGerund(string input) Parameters input string The input. Returns bool true if the specified input is gerund; otherwise, false. IsGerundException(string) Determines whether [is gerund exception] [the specified word]. protected bool IsGerundException(string word) Parameters word string The word. Returns bool true if [is gerund exception] [the specified word]; otherwise, false. IsPast(string) Determines whether the specified input is past. public bool IsPast(string input) Parameters input string The input. Returns bool true if the specified input is past; otherwise, false. IsPlural(string) Determines whether the specified input is plural. public bool IsPlural(string input) Parameters input string The input. Returns bool true if the specified input is plural; otherwise, false. IsSingular(string) Determines whether the specified input is singular. public bool IsSingular(string input) Parameters input string The input. Returns bool true if the specified input is singular; otherwise, false. IsUncountable(string) Determines whether the specified input is uncountable. public bool IsUncountable(string input) Parameters input string The input. Returns bool true if the specified input is uncountable; otherwise, false. Pluralize(string) Pluralizes the specified input. public string Pluralize(string input) Parameters input string The input. Returns string The plural form of the word. Singularize(string) Singularizes the specified input. public string Singularize(string input) Parameters input string The input. Returns string The singular form of the word. ToGerund(string) Converts to gerund. public string ToGerund(string input) Parameters input string The input. Returns string ToPast(string) Converts to past. public string ToPast(string input) Parameters input string The input. Returns string ToPresent(string) Converts to present. public string ToPresent(string input) Parameters input string The input. Returns string See Also IInflectorLanguage"
  },
  "api/Enlighten.Inflector.BaseClasses.html": {
    "href": "api/Enlighten.Inflector.BaseClasses.html",
    "title": "Namespace Enlighten.Inflector.BaseClasses | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Inflector.BaseClasses Classes InflectorBaseClass Inflector base class"
  },
  "api/Enlighten.Inflector.DefaultInflector.html": {
    "href": "api/Enlighten.Inflector.DefaultInflector.html",
    "title": "Class DefaultInflector | Enlighten API Reference",
    "keywords": "Class DefaultInflector Namespace Enlighten.Inflector Assembly Enlighten.dll Default inflector public class DefaultInflector : IInflector Inheritance object DefaultInflector Implements IInflector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultInflector(IEnumerable<IInflectorLanguage>) Initializes a new instance of the DefaultInflector class. public DefaultInflector(IEnumerable<IInflectorLanguage> languages) Parameters languages IEnumerable<IInflectorLanguage> The languages. Properties Languages Gets the languages. public Dictionary<string, IInflectorLanguage> Languages { get; } Property Value Dictionary<string, IInflectorLanguage> The languages. Methods Infinitive(string, InflectorLanguage) Infinitives the specified input. public string Infinitive(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string IsGerund(string, InflectorLanguage) Determines whether the specified input is gerund. public bool IsGerund(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is gerund; otherwise, false. IsPast(string, InflectorLanguage) Determines whether the specified input is past. public bool IsPast(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is past; otherwise, false. IsPlural(string, InflectorLanguage) Determines whether the specified input is plural. public bool IsPlural(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is plural; otherwise, false. IsSingular(string, InflectorLanguage) Determines whether the specified input is singular. public bool IsSingular(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is singular; otherwise, false. IsUncountable(string, InflectorLanguage) Determines whether the specified input is uncountable. public bool IsUncountable(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is uncountable; otherwise, false. Pluralize(string, InflectorLanguage) Pluralizes the specified input. public string Pluralize(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string Singularize(string, InflectorLanguage) Singularizes the specified input. public string Singularize(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToGerund(string, InflectorLanguage) Converts to gerund. public string ToGerund(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToPast(string, InflectorLanguage) Converts to past. public string ToPast(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToPresent(string, InflectorLanguage) Converts to present. public string ToPresent(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string See Also IInflector"
  },
  "api/Enlighten.Inflector.EnglishInflector.html": {
    "href": "api/Enlighten.Inflector.EnglishInflector.html",
    "title": "Class EnglishInflector | Enlighten API Reference",
    "keywords": "Class EnglishInflector Namespace Enlighten.Inflector Assembly Enlighten.dll Default inflector public class EnglishInflector : InflectorBaseClass, IInflectorLanguage Inheritance object InflectorBaseClass EnglishInflector Implements IInflectorLanguage Inherited Members InflectorBaseClass.VBG InflectorBaseClass.VBN InflectorBaseClass.VBZ InflectorBaseClass.Conjugate(string, string) InflectorBaseClass.Infinitive(string) InflectorBaseClass.IsGerund(string) InflectorBaseClass.IsPast(string) InflectorBaseClass.IsPlural(string) InflectorBaseClass.IsSingular(string) InflectorBaseClass.IsUncountable(string) InflectorBaseClass.Pluralize(string) InflectorBaseClass.Singularize(string) InflectorBaseClass.ToGerund(string) InflectorBaseClass.ToPast(string) InflectorBaseClass.ToPresent(string) InflectorBaseClass.AddConjugationRule(string, Func<string, string, string>) InflectorBaseClass.AddGerundException(string) InflectorBaseClass.AddGerundRule(string) InflectorBaseClass.AddInfinitive(string, string) InflectorBaseClass.AddIrregular(string, string, bool) InflectorBaseClass.AddPastRule(string) InflectorBaseClass.AddPlural(string, string) InflectorBaseClass.AddSingular(string, string) InflectorBaseClass.AddUncountable(string) InflectorBaseClass.IsGerundException(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnglishInflector() Initializes a new instance of the EnglishInflector class. public EnglishInflector() Properties Name Gets the name. public override string Name { get; } Property Value string The name. See Also IInflector"
  },
  "api/Enlighten.Inflector.Enums.InflectorLanguage.html": {
    "href": "api/Enlighten.Inflector.Enums.InflectorLanguage.html",
    "title": "Class InflectorLanguage | Enlighten API Reference",
    "keywords": "Class InflectorLanguage Namespace Enlighten.Inflector.Enums Assembly Enlighten.dll Inflector language public class InflectorLanguage : StringEnumBaseClass<InflectorLanguage> Inheritance object StringEnumBaseClass<InflectorLanguage> InflectorLanguage Inherited Members StringEnumBaseClass<InflectorLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<InflectorLanguage>.ToString() StringEnumBaseClass<InflectorLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InflectorLanguage() Initializes a new instance of the InflectorLanguage class. public InflectorLanguage() InflectorLanguage(string) Initializes a new instance of the InflectorLanguage class. public InflectorLanguage(string name) Parameters name string The name. Properties English Gets the english. public static InflectorLanguage English { get; } Property Value InflectorLanguage The english."
  },
  "api/Enlighten.Inflector.Enums.html": {
    "href": "api/Enlighten.Inflector.Enums.html",
    "title": "Namespace Enlighten.Inflector.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Inflector.Enums Classes InflectorLanguage Inflector language"
  },
  "api/Enlighten.Inflector.Inflectors.ConjugationRule.html": {
    "href": "api/Enlighten.Inflector.Inflectors.ConjugationRule.html",
    "title": "Class ConjugationRule | Enlighten API Reference",
    "keywords": "Class ConjugationRule Namespace Enlighten.Inflector.Inflectors Assembly Enlighten.dll Inflector rule public class ConjugationRule Inheritance object ConjugationRule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConjugationRule(string, Func<string, string, string>) Initializes a new instance of the Rule class. public ConjugationRule(string pattern, Func<string, string, string> replacement) Parameters pattern string The pattern. replacement Func<string, string, string> The replacement. Methods Apply(string, string) Applies the rule to the specified word. public string Apply(string word, string partOfSpeech) Parameters word string The word. partOfSpeech string Type of the conjugation. Returns string The resulting word. CanApply(string) Determines whether this instance can be applied to the specified word. public bool CanApply(string word) Parameters word string The word. Returns bool true if this instance can apply the specified word; otherwise, false."
  },
  "api/Enlighten.Inflector.Inflectors.html": {
    "href": "api/Enlighten.Inflector.Inflectors.html",
    "title": "Namespace Enlighten.Inflector.Inflectors | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Inflector.Inflectors Classes ConjugationRule Inflector rule"
  },
  "api/Enlighten.Inflector.Interfaces.IInflector.html": {
    "href": "api/Enlighten.Inflector.Interfaces.IInflector.html",
    "title": "Interface IInflector | Enlighten API Reference",
    "keywords": "Interface IInflector Namespace Enlighten.Inflector.Interfaces Assembly Enlighten.dll Inflector interface public interface IInflector Methods Infinitive(string, InflectorLanguage) Infinitives the specified input. string Infinitive(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string IsGerund(string, InflectorLanguage) Determines whether the specified input is gerund. bool IsGerund(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is gerund; otherwise, false. IsPast(string, InflectorLanguage) Determines whether the specified input is past. bool IsPast(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is past; otherwise, false. IsPlural(string, InflectorLanguage) Determines whether the specified input is plural. bool IsPlural(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is plural; otherwise, false. IsSingular(string, InflectorLanguage) Determines whether the specified input is singular. bool IsSingular(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is singular; otherwise, false. IsUncountable(string, InflectorLanguage) Determines whether the specified input is uncountable. bool IsUncountable(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns bool true if the specified input is uncountable; otherwise, false. Pluralize(string, InflectorLanguage) Pluralizes the specified input. string Pluralize(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string Singularize(string, InflectorLanguage) Singularizes the specified input. string Singularize(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToGerund(string, InflectorLanguage) Converts to gerund. string ToGerund(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToPast(string, InflectorLanguage) Converts to past. string ToPast(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string ToPresent(string, InflectorLanguage) Converts to present. string ToPresent(string input, InflectorLanguage language) Parameters input string The input. language InflectorLanguage The language. Returns string"
  },
  "api/Enlighten.Inflector.Interfaces.IInflectorLanguage.html": {
    "href": "api/Enlighten.Inflector.Interfaces.IInflectorLanguage.html",
    "title": "Interface IInflectorLanguage | Enlighten API Reference",
    "keywords": "Interface IInflectorLanguage Namespace Enlighten.Inflector.Interfaces Assembly Enlighten.dll Inflector language interface public interface IInflectorLanguage Properties Name Gets the name. string Name { get; } Property Value string The name. Methods Conjugate(string, string) Conjugates the specified input. string Conjugate(string input, string partOfSpeechTo) Parameters input string The input. partOfSpeechTo string The part of speech to. Returns string Infinitive(string) Infinitives the specified input. string? Infinitive(string input) Parameters input string The input. Returns string IsGerund(string) Determines whether the specified input is gerund. bool IsGerund(string input) Parameters input string The input. Returns bool true if the specified input is gerund; otherwise, false. IsPast(string) Determines whether the specified input is past. bool IsPast(string input) Parameters input string The input. Returns bool true if the specified input is past; otherwise, false. IsPlural(string) Determines whether the specified input is plural. bool IsPlural(string input) Parameters input string The input. Returns bool true if the specified input is plural; otherwise, false. IsSingular(string) Determines whether the specified input is singular. bool IsSingular(string input) Parameters input string The input. Returns bool true if the specified input is singular; otherwise, false. IsUncountable(string) Determines whether the specified input is uncountable. bool IsUncountable(string input) Parameters input string The input. Returns bool true if the specified input is uncountable; otherwise, false. Pluralize(string) Pluralizes the specified input. string Pluralize(string input) Parameters input string The input. Returns string Singularize(string) Singularizes the specified input. string Singularize(string input) Parameters input string The input. Returns string ToGerund(string) Converts to gerund. string ToGerund(string input) Parameters input string The input. Returns string ToPast(string) Converts to past. string ToPast(string input) Parameters input string The input. Returns string ToPresent(string) Converts to present. string ToPresent(string input) Parameters input string The input. Returns string"
  },
  "api/Enlighten.Inflector.Interfaces.html": {
    "href": "api/Enlighten.Inflector.Interfaces.html",
    "title": "Namespace Enlighten.Inflector.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Inflector.Interfaces Interfaces IInflector Inflector interface IInflectorLanguage Inflector language interface"
  },
  "api/Enlighten.Inflector.Rule.html": {
    "href": "api/Enlighten.Inflector.Rule.html",
    "title": "Class Rule | Enlighten API Reference",
    "keywords": "Class Rule Namespace Enlighten.Inflector Assembly Enlighten.dll Inflector rule public class Rule Inheritance object Rule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Rule(string, string) Initializes a new instance of the Rule class. public Rule(string pattern, string replacement) Parameters pattern string The pattern. replacement string The replacement. Methods Apply(string) Applies the rule to the specified word. public string Apply(string word) Parameters word string The word. Returns string The resulting word. CanApply(string) Determines whether this instance can be applied to the specified word. public bool CanApply(string word) Parameters word string The word. Returns bool true if this instance can apply the specified word; otherwise, false."
  },
  "api/Enlighten.Inflector.html": {
    "href": "api/Enlighten.Inflector.html",
    "title": "Namespace Enlighten.Inflector | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Inflector Classes DefaultInflector Default inflector EnglishInflector Default inflector Rule Inflector rule"
  },
  "api/Enlighten.NameFinder.DefaultEntityFinder.html": {
    "href": "api/Enlighten.NameFinder.DefaultEntityFinder.html",
    "title": "Class DefaultEntityFinder | Enlighten API Reference",
    "keywords": "Class DefaultEntityFinder Namespace Enlighten.NameFinder Assembly Enlighten.dll Default name finder public class DefaultEntityFinder : IEntityFinder Inheritance object DefaultEntityFinder Implements IEntityFinder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultEntityFinder(IEnumerable<IFinder>) Initializes a new instance of the DefaultEntityFinder class. public DefaultEntityFinder(IEnumerable<IFinder> finders) Parameters finders IEnumerable<IFinder> The finders. Methods Find(Token[], string) Finds the entities in the specified document. public Token[] Find(Token[] tokens, string entityFinder) Parameters tokens Token[] The tokens. entityFinder string The entity finder. Returns Token[] The document after it is processed. See Also IEntityFinder"
  },
  "api/Enlighten.NameFinder.Enums.EntityFinderLanguage.html": {
    "href": "api/Enlighten.NameFinder.Enums.EntityFinderLanguage.html",
    "title": "Class EntityFinderLanguage | Enlighten API Reference",
    "keywords": "Class EntityFinderLanguage Namespace Enlighten.NameFinder.Enums Assembly Enlighten.dll Name finder language public class EntityFinderLanguage : StringEnumBaseClass<EntityFinderLanguage> Inheritance object StringEnumBaseClass<EntityFinderLanguage> EntityFinderLanguage Inherited Members StringEnumBaseClass<EntityFinderLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<EntityFinderLanguage>.ToString() StringEnumBaseClass<EntityFinderLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EntityFinderLanguage() Initializes a new instance of the EntityFinderLanguage class. public EntityFinderLanguage() EntityFinderLanguage(string) Initializes a new instance of the EntityFinderLanguage class. public EntityFinderLanguage(string name) Parameters name string The name. Properties DefaultFinder Gets the default finder. public static EntityFinderLanguage DefaultFinder { get; } Property Value EntityFinderLanguage The default finder. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.NameFinder.Enums.html": {
    "href": "api/Enlighten.NameFinder.Enums.html",
    "title": "Namespace Enlighten.NameFinder.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.NameFinder.Enums Classes EntityFinderLanguage Name finder language"
  },
  "api/Enlighten.NameFinder.Finders.DefaultFinder.html": {
    "href": "api/Enlighten.NameFinder.Finders.DefaultFinder.html",
    "title": "Class DefaultFinder | Enlighten API Reference",
    "keywords": "Class DefaultFinder Namespace Enlighten.NameFinder.Finders Assembly Enlighten.dll Default name finder public class DefaultFinder : IFinder Inheritance object DefaultFinder Implements IFinder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods Find(Token[]) Finds the entities in the specified document. public Token[] Find(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The document after it is processed. See Also IFinder"
  },
  "api/Enlighten.NameFinder.Finders.html": {
    "href": "api/Enlighten.NameFinder.Finders.html",
    "title": "Namespace Enlighten.NameFinder.Finders | Enlighten API Reference",
    "keywords": "Namespace Enlighten.NameFinder.Finders Classes DefaultFinder Default name finder"
  },
  "api/Enlighten.NameFinder.Interfaces.IEntityFinder.html": {
    "href": "api/Enlighten.NameFinder.Interfaces.IEntityFinder.html",
    "title": "Interface IEntityFinder | Enlighten API Reference",
    "keywords": "Interface IEntityFinder Namespace Enlighten.NameFinder.Interfaces Assembly Enlighten.dll Name finder interface public interface IEntityFinder Methods Find(Token[], string) Finds the entities in the specified document. Token[] Find(Token[] tokens, string entityFinder) Parameters tokens Token[] The tokens. entityFinder string The entity finder. Returns Token[] The document after it is processed."
  },
  "api/Enlighten.NameFinder.Interfaces.IFinder.html": {
    "href": "api/Enlighten.NameFinder.Interfaces.IFinder.html",
    "title": "Interface IFinder | Enlighten API Reference",
    "keywords": "Interface IFinder Namespace Enlighten.NameFinder.Interfaces Assembly Enlighten.dll Finder interface public interface IFinder Properties Name Gets the name. string Name { get; } Property Value string The name. Methods Find(Token[]) Finds the entities in the specified document. Token[] Find(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The document after it is processed."
  },
  "api/Enlighten.NameFinder.Interfaces.html": {
    "href": "api/Enlighten.NameFinder.Interfaces.html",
    "title": "Namespace Enlighten.NameFinder.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.NameFinder.Interfaces Interfaces IEntityFinder Name finder interface IFinder Finder interface"
  },
  "api/Enlighten.NameFinder.html": {
    "href": "api/Enlighten.NameFinder.html",
    "title": "Namespace Enlighten.NameFinder | Enlighten API Reference",
    "keywords": "Namespace Enlighten.NameFinder Classes DefaultEntityFinder Default name finder"
  },
  "api/Enlighten.Normalizer.Default.ASCIIFolder.html": {
    "href": "api/Enlighten.Normalizer.Default.ASCIIFolder.html",
    "title": "Class ASCIIFolder | Enlighten API Reference",
    "keywords": "Class ASCIIFolder Namespace Enlighten.Normalizer.Default Assembly Enlighten.dll ASCII folder public class ASCIIFolder : INormalizer Inheritance object ASCIIFolder Implements INormalizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ASCIIFolder(ObjectPool<StringBuilder>) Initializes a new instance of the ASCIIFolder class. public ASCIIFolder(ObjectPool<StringBuilder> objectPool) Parameters objectPool ObjectPool<StringBuilder> The object pool. Properties Name Gets the name. public string Name { get; } Property Value string The name. ObjectPool Gets the object pool. public ObjectPool<StringBuilder> ObjectPool { get; } Property Value ObjectPool<StringBuilder> The object pool. Order Gets the order. public int Order { get; } Property Value int The order. Methods Normalize(Token[]) Normalizes the specified tokens. public Token[] Normalize(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The normalized tokens. See Also INormalizer"
  },
  "api/Enlighten.Normalizer.Default.HTMLToText.html": {
    "href": "api/Enlighten.Normalizer.Default.HTMLToText.html",
    "title": "Class HTMLToText | Enlighten API Reference",
    "keywords": "Class HTMLToText Namespace Enlighten.Normalizer.Default Assembly Enlighten.dll HTML to text normalizer public class HTMLToText : ITextNormalizer Inheritance object HTMLToText Implements ITextNormalizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HTMLToText(ObjectPool<StringBuilder>) Initializes a new instance of the HTMLToText class. public HTMLToText(ObjectPool<StringBuilder> objectPool) Parameters objectPool ObjectPool<StringBuilder> The object pool. Properties Name Gets the name. public string Name { get; } Property Value string The name. ObjectPool Gets the object pool. public ObjectPool<StringBuilder> ObjectPool { get; } Property Value ObjectPool<StringBuilder> The object pool. Order Gets the order. public int Order { get; } Property Value int The order. Methods Normalize(string) Normalizes the specified text. public string Normalize(string text) Parameters text string The text. Returns string The normalized text. See Also ITextNormalizer"
  },
  "api/Enlighten.Normalizer.Default.LowerCase.html": {
    "href": "api/Enlighten.Normalizer.Default.LowerCase.html",
    "title": "Class LowerCase | Enlighten API Reference",
    "keywords": "Class LowerCase Namespace Enlighten.Normalizer.Default Assembly Enlighten.dll Lower case normalizer public class LowerCase : INormalizer Inheritance object LowerCase Implements INormalizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public string Name { get; } Property Value string The name. Order Gets the order. public int Order { get; } Property Value int The order. Methods Normalize(Token[]) Normalizes the specified tokens. public Token[] Normalize(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The normalized tokens. See Also INormalizer"
  },
  "api/Enlighten.Normalizer.Default.html": {
    "href": "api/Enlighten.Normalizer.Default.html",
    "title": "Namespace Enlighten.Normalizer.Default | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Normalizer.Default Classes ASCIIFolder ASCII folder HTMLToText HTML to text normalizer LowerCase Lower case normalizer"
  },
  "api/Enlighten.Normalizer.DefaultNormalizer.html": {
    "href": "api/Enlighten.Normalizer.DefaultNormalizer.html",
    "title": "Class DefaultNormalizer | Enlighten API Reference",
    "keywords": "Class DefaultNormalizer Namespace Enlighten.Normalizer Assembly Enlighten.dll Default normalizer public class DefaultNormalizer : INormalizerManager Inheritance object DefaultNormalizer Implements INormalizerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultNormalizer(IEnumerable<INormalizer>, IEnumerable<ITextNormalizer>) Initializes a new instance of the DefaultNormalizer class. public DefaultNormalizer(IEnumerable<INormalizer> normalizers, IEnumerable<ITextNormalizer> textNormalizers) Parameters normalizers IEnumerable<INormalizer> The normalizers. textNormalizers IEnumerable<ITextNormalizer> The text normalizers. Properties Normalizers Gets the normalizers. public IEnumerable<INormalizer> Normalizers { get; } Property Value IEnumerable<INormalizer> The normalizers. TextNormalizers Gets the text normalizers. public IEnumerable<ITextNormalizer> TextNormalizers { get; } Property Value IEnumerable<ITextNormalizer> The text normalizers. Methods Normalize(Token[]) Normalizes the specified tokens. public Token[] Normalize(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The normalized tokens. Normalize(string) Normalizes the specified text. public string Normalize(string text) Parameters text string The text. Returns string The normalized text. See Also INormalizerManager"
  },
  "api/Enlighten.Normalizer.Interfaces.INormalizer.html": {
    "href": "api/Enlighten.Normalizer.Interfaces.INormalizer.html",
    "title": "Interface INormalizer | Enlighten API Reference",
    "keywords": "Interface INormalizer Namespace Enlighten.Normalizer.Interfaces Assembly Enlighten.dll Normalizer interface public interface INormalizer Properties Name Gets the name. string Name { get; } Property Value string The name. Order Gets the order. int Order { get; } Property Value int The order. Methods Normalize(Token[]) Normalizes the specified tokens. Token[] Normalize(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The normalized tokens."
  },
  "api/Enlighten.Normalizer.Interfaces.INormalizerManager.html": {
    "href": "api/Enlighten.Normalizer.Interfaces.INormalizerManager.html",
    "title": "Interface INormalizerManager | Enlighten API Reference",
    "keywords": "Interface INormalizerManager Namespace Enlighten.Normalizer.Interfaces Assembly Enlighten.dll Normalizer manager interface public interface INormalizerManager Methods Normalize(Token[]) Normalizes the specified tokens. Token[] Normalize(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The normalized tokens. Normalize(string) Normalizes the specified text. string Normalize(string text) Parameters text string The text. Returns string The normalized text."
  },
  "api/Enlighten.Normalizer.Interfaces.ITextNormalizer.html": {
    "href": "api/Enlighten.Normalizer.Interfaces.ITextNormalizer.html",
    "title": "Interface ITextNormalizer | Enlighten API Reference",
    "keywords": "Interface ITextNormalizer Namespace Enlighten.Normalizer.Interfaces Assembly Enlighten.dll Text normalizer interface public interface ITextNormalizer Properties Name Gets the name. string Name { get; } Property Value string The name. Order Gets the order. int Order { get; } Property Value int The order. Methods Normalize(string) Normalizes the specified text. string Normalize(string text) Parameters text string The text. Returns string The normalized text."
  },
  "api/Enlighten.Normalizer.Interfaces.html": {
    "href": "api/Enlighten.Normalizer.Interfaces.html",
    "title": "Namespace Enlighten.Normalizer.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Normalizer.Interfaces Interfaces INormalizer Normalizer interface INormalizerManager Normalizer manager interface ITextNormalizer Text normalizer interface"
  },
  "api/Enlighten.Normalizer.html": {
    "href": "api/Enlighten.Normalizer.html",
    "title": "Namespace Enlighten.Normalizer | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Normalizer Classes DefaultNormalizer Default normalizer"
  },
  "api/Enlighten.POSTagger.DefaultTagger.html": {
    "href": "api/Enlighten.POSTagger.DefaultTagger.html",
    "title": "Class DefaultTagger | Enlighten API Reference",
    "keywords": "Class DefaultTagger Namespace Enlighten.POSTagger Assembly Enlighten.dll Default part of speech tagger public class DefaultTagger : IPOSTagger Inheritance object DefaultTagger Implements IPOSTagger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultTagger(IEnumerable<IPOSTaggerLanguage>) Initializes a new instance of the DefaultTagger class. public DefaultTagger(IEnumerable<IPOSTaggerLanguage> languages) Parameters languages IEnumerable<IPOSTaggerLanguage> The languages. Methods Tag(Token[], POSTaggerLanguage) Stems the specified tokens. public Token[] Tag(Token[] tokens, POSTaggerLanguage language) Parameters tokens Token[] The tokens. language POSTaggerLanguage The language. Returns Token[] The resulting stemmed tokens. See Also IPOSTagger"
  },
  "api/Enlighten.POSTagger.Enum.BrillConditions.html": {
    "href": "api/Enlighten.POSTagger.Enum.BrillConditions.html",
    "title": "Enum BrillConditions | Enlighten API Reference",
    "keywords": "Enum BrillConditions Namespace Enlighten.POSTagger.Enum Assembly Enlighten.dll Brill conditions public enum BrillConditions Fields CURRENTWD = 6 The currentwd NEXT1OR2OR3TAG = 9 The nex t1 o r2 o r3 tag NEXT1OR2TAG = 16 The nex t1 o r2 tag NEXT1OR2WD = 18 The nex t1 o r2 wd NEXT2TAG = 171 The nex t2 tag NEXT2WD = 11 The nex t2 wd NEXTBIGRAM = 10 The nextbigram NEXTTAG = 3 The nexttag NEXTTAG2 = 4 The nextta g2 NEXTWD = 15 The nextwd PREV1OR2OR3TAG = 13 The pre v1 o r2 o r3 tag PREV1OR2TAG = 1 The pre v1 o r2 tag PREV1OR2WD = 21 The pre v1 o r2 wd PREV2TAG = 17 The pre v2 tag PREV2TAGNEXTTAG = 172 The pre v2 tagnexttag PREV2WD = 19 The pre v2 wd PREVTAG = 2 The prevtag PREVTAG2 = 41 The prevta g2 PREVWORD = 5 The prevword PREVWORDPREVTAG = 51 The prevwordprevtag RBIGRAM = 20 The rbigram STARTWORD = 0 The startword SURROUNDTAG = 14 The surroundtag SURROUNDTAGWD = 141 The surroundtagwd WDNEXTTAG = 12 The wdnexttag WDNEXTWD = 121 The wdnextwd WDPREVTAG = 8 The wdprevtag WDPREVWD = 81 The wdprevwd"
  },
  "api/Enlighten.POSTagger.Enum.POSTaggerLanguage.html": {
    "href": "api/Enlighten.POSTagger.Enum.POSTaggerLanguage.html",
    "title": "Class POSTaggerLanguage | Enlighten API Reference",
    "keywords": "Class POSTaggerLanguage Namespace Enlighten.POSTagger.Enum Assembly Enlighten.dll Part of speech tagger language public class POSTaggerLanguage : StringEnumBaseClass<POSTaggerLanguage> Inheritance object StringEnumBaseClass<POSTaggerLanguage> POSTaggerLanguage Inherited Members StringEnumBaseClass<POSTaggerLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<POSTaggerLanguage>.ToString() StringEnumBaseClass<POSTaggerLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors POSTaggerLanguage() Initializes a new instance of the POSTaggerLanguage class. public POSTaggerLanguage() POSTaggerLanguage(string) Initializes a new instance of the POSTaggerLanguage class. public POSTaggerLanguage(string name) Parameters name string The name. Properties BrillTagger Gets the brill tagger. public static POSTaggerLanguage BrillTagger { get; } Property Value POSTaggerLanguage The brill tagger. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.POSTagger.Enum.html": {
    "href": "api/Enlighten.POSTagger.Enum.html",
    "title": "Namespace Enlighten.POSTagger.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.POSTagger.Enum Classes POSTaggerLanguage Part of speech tagger language Enums BrillConditions Brill conditions"
  },
  "api/Enlighten.POSTagger.Interfaces.IPOSTagger.html": {
    "href": "api/Enlighten.POSTagger.Interfaces.IPOSTagger.html",
    "title": "Interface IPOSTagger | Enlighten API Reference",
    "keywords": "Interface IPOSTagger Namespace Enlighten.POSTagger.Interfaces Assembly Enlighten.dll Part of speech tagger public interface IPOSTagger Methods Tag(Token[], POSTaggerLanguage) Tags the specified tokens. Token[] Tag(Token[] tokens, POSTaggerLanguage language) Parameters tokens Token[] The tokens. language POSTaggerLanguage The language. Returns Token[] The tagged tokens."
  },
  "api/Enlighten.POSTagger.Interfaces.IPOSTaggerLanguage.html": {
    "href": "api/Enlighten.POSTagger.Interfaces.IPOSTaggerLanguage.html",
    "title": "Interface IPOSTaggerLanguage | Enlighten API Reference",
    "keywords": "Interface IPOSTaggerLanguage Namespace Enlighten.POSTagger.Interfaces Assembly Enlighten.dll Part of speech language tagger public interface IPOSTaggerLanguage Properties ISOCode Gets the name. string ISOCode { get; } Property Value string The name. Methods Tag(Token[]) Tags the specified tokens. Token[] Tag(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The tokens tagged."
  },
  "api/Enlighten.POSTagger.Interfaces.html": {
    "href": "api/Enlighten.POSTagger.Interfaces.html",
    "title": "Namespace Enlighten.POSTagger.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.POSTagger.Interfaces Interfaces IPOSTagger Part of speech tagger IPOSTaggerLanguage Part of speech language tagger"
  },
  "api/Enlighten.POSTagger.Taggers.BrillRule.html": {
    "href": "api/Enlighten.POSTagger.Taggers.BrillRule.html",
    "title": "Class BrillRule | Enlighten API Reference",
    "keywords": "Class BrillRule Namespace Enlighten.POSTagger.Taggers Assembly Enlighten.dll Brill rule public class BrillRule Inheritance object BrillRule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BrillRule(string, string, BrillConditions, string?, string?, string?, bool) Initializes a new instance of the BrillRule class. public BrillRule(string from, string to, BrillConditions type, string? c1, string? c2, string? c3, bool secondRun) Parameters from string From. to string To. type BrillConditions The type. c1 string The c1. c2 string The c2. c3 string The c3. secondRun bool if set to true [second run]. Properties C1 Gets or sets the c1. public string? C1 { get; set; } Property Value string The c1. C2 Gets or sets the c2. public string? C2 { get; set; } Property Value string The c2. C3 Gets or sets the c3. public string? C3 { get; set; } Property Value string The c3. From Gets or sets from. public string From { get; set; } Property Value string From. SecondRun Gets or sets a value indicating whether [second run]. public bool SecondRun { get; set; } Property Value bool true if [second run]; otherwise, false. To Gets or sets to. public string To { get; set; } Property Value string To. Type Gets or sets the type. public BrillConditions Type { get; set; } Property Value BrillConditions The type."
  },
  "api/Enlighten.POSTagger.Taggers.LexiconRule.html": {
    "href": "api/Enlighten.POSTagger.Taggers.LexiconRule.html",
    "title": "Class LexiconRule | Enlighten API Reference",
    "keywords": "Class LexiconRule Namespace Enlighten.POSTagger.Taggers Assembly Enlighten.dll Lexicon rule public class LexiconRule Inheritance object LexiconRule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LexiconRule(string, string) Initializes a new instance of the LexiconRule class. public LexiconRule(string value, string tag) Parameters value string The value. tag string The tag. Properties Blocked Gets or sets a value indicating whether this LexiconRule is blocked. public bool Blocked { get; set; } Property Value bool true if blocked; otherwise, false. Tag Gets or sets the tag. public string Tag { get; set; } Property Value string The tag. Value Gets or sets the value. public string Value { get; set; } Property Value string The value."
  },
  "api/Enlighten.POSTagger.Taggers.SimpleTagger.html": {
    "href": "api/Enlighten.POSTagger.Taggers.SimpleTagger.html",
    "title": "Class SimpleTagger | Enlighten API Reference",
    "keywords": "Class SimpleTagger Namespace Enlighten.POSTagger.Taggers Assembly Enlighten.dll Simple POS tagger public class SimpleTagger : IPOSTaggerLanguage Inheritance object SimpleTagger Implements IPOSTaggerLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimpleTagger(IInflector, ISynonymFinder) Initializes a new instance of the SimpleTagger class. public SimpleTagger(IInflector inflector, ISynonymFinder synonymFinder) Parameters inflector IInflector The inflector. synonymFinder ISynonymFinder The synonym finder. Properties ISOCode Gets the name. public string ISOCode { get; } Property Value string The name. Infinitives Gets the infinitives. public List<string> Infinitives { get; } Property Value List<string> The infinitives. Inflector Gets the inflector. public IInflector Inflector { get; } Property Value IInflector The inflector. Lexicon Gets the lexicon. public Dictionary<string, LexiconRule> Lexicon { get; } Property Value Dictionary<string, LexiconRule> The lexicon. Rules Gets the rules. public List<BrillRule> Rules { get; } Property Value List<BrillRule> The rules. Suffixes Gets the suffixes. public Dictionary<string, string> Suffixes { get; } Property Value Dictionary<string, string> The suffixes. SynonymFinder Gets the synonym finder. public ISynonymFinder SynonymFinder { get; } Property Value ISynonymFinder The synonym finder. Methods Apply(Token[], TagProbability[]) Applies the specified tokens. public TagProbability[] Apply(Token[] tokens, TagProbability[] tags) Parameters tokens Token[] The tokens. tags TagProbability[] The tags. Returns TagProbability[] ApplyRule(BrillRule, Token, TagProbability, int, Token[], TagProbability[], int) Applies the rule. public static void ApplyRule(BrillRule rule, Token token, TagProbability tag, int index, Token[] tokens, TagProbability[] tags, int run) Parameters rule BrillRule The rule. token Token The input. tag TagProbability The tag. index int The index. tokens Token[] The tokens. tags TagProbability[] The tags. run int The run. ApplyRules(Token, int, Token[], TagProbability[], int) Applies the rules. public void ApplyRules(Token input, int index, Token[] tokens, TagProbability[] tags, int run) Parameters input Token The input. index int The index. tokens Token[] The tokens. tags TagProbability[] The tags. run int The run. GetTag(Token) Gets the tag. public TagProbability GetTag(Token token) Parameters token Token The token. Returns TagProbability Tag(Token[]) Tags the specified tokens. public Token[] Tag(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The tokens tagged. TestSuffixes(string) Tests the suffixes. public string TestSuffixes(string input) Parameters input string The input. Returns string See Also IPOSTaggerLanguage"
  },
  "api/Enlighten.POSTagger.Taggers.TagProbability.html": {
    "href": "api/Enlighten.POSTagger.Taggers.TagProbability.html",
    "title": "Class TagProbability | Enlighten API Reference",
    "keywords": "Class TagProbability Namespace Enlighten.POSTagger.Taggers Assembly Enlighten.dll Tag probability public class TagProbability Inheritance object TagProbability Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TagProbability(string, string, double, bool) Initializes a new instance of the TagProbability class. public TagProbability(string tag, string norm, double confidence, bool blocked) Parameters tag string The tag. norm string The norm. confidence double The confidence. blocked bool if set to true [blocked]. Properties Blocked Gets a value indicating whether this TagProbability is blocked. public bool Blocked { get; set; } Property Value bool true if blocked; otherwise, false. Confidence Gets the confidence. public double Confidence { get; set; } Property Value double The confidence. Norm Gets the norm. public string Norm { get; set; } Property Value string The norm. Tag Gets the tag. public string Tag { get; set; } Property Value string The tag."
  },
  "api/Enlighten.POSTagger.Taggers.html": {
    "href": "api/Enlighten.POSTagger.Taggers.html",
    "title": "Namespace Enlighten.POSTagger.Taggers | Enlighten API Reference",
    "keywords": "Namespace Enlighten.POSTagger.Taggers Classes BrillRule Brill rule LexiconRule Lexicon rule SimpleTagger Simple POS tagger TagProbability Tag probability"
  },
  "api/Enlighten.POSTagger.html": {
    "href": "api/Enlighten.POSTagger.html",
    "title": "Namespace Enlighten.POSTagger | Enlighten API Reference",
    "keywords": "Namespace Enlighten.POSTagger Classes DefaultTagger Default part of speech tagger"
  },
  "api/Enlighten.Pipeline.html": {
    "href": "api/Enlighten.Pipeline.html",
    "title": "Class Pipeline | Enlighten API Reference",
    "keywords": "Class Pipeline Namespace Enlighten Assembly Enlighten.dll Main pipeline class public class Pipeline Inheritance object Pipeline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Pipeline(INormalizerManager, IPOSTagger, ISentenceDetector, IStemmer, IStopWordsManager, ITokenizer, IFeatureExtractor, ITextSummarizer, IEntityFinder) Initializes a new instance of the Pipeline class. public Pipeline(INormalizerManager normalizerManager, IPOSTagger pOSTagger, ISentenceDetector sentenceDetector, IStemmer stemmer, IStopWordsManager stopWordsManager, ITokenizer tokenizer, IFeatureExtractor featureExtractor, ITextSummarizer textSummarizer, IEntityFinder entityFinder) Parameters normalizerManager INormalizerManager The normalizer manager. pOSTagger IPOSTagger The p os tagger. sentenceDetector ISentenceDetector The sentence detector. stemmer IStemmer The stemmer. stopWordsManager IStopWordsManager The stop words manager. tokenizer ITokenizer The tokenizer. featureExtractor IFeatureExtractor The feature extractor. textSummarizer ITextSummarizer The text summarizer. entityFinder IEntityFinder The entity finder. Exceptions ArgumentNullException normalizerManager or pOSTagger or sentenceDetector or stemmer or stopWordsManager or tokenizer or featureExtractor or textSummarizer Methods Process(string) Processes the specified text. public Document Process(string text) Parameters text string The text. Returns Document The resulting document object. SetLanguage(Languages) Sets the language. public Pipeline SetLanguage(Languages languages) Parameters languages Languages The languages. Returns Pipeline This. With(EntityFinderLanguage) Withes the specified entity finder language. public Pipeline With(EntityFinderLanguage entityFinderLanguage) Parameters entityFinderLanguage EntityFinderLanguage The entity finder language. Returns Pipeline Exceptions ArgumentNullException entityFinderLanguage With(POSTaggerLanguage) Withes the specified position tagger. public Pipeline With(POSTaggerLanguage posTagger) Parameters posTagger POSTaggerLanguage The position tagger. Returns Pipeline This. Exceptions ArgumentNullException posTagger With(SentenceDetectorLanguage) Withes the specified sentence detector. public Pipeline With(SentenceDetectorLanguage sentenceDetector) Parameters sentenceDetector SentenceDetectorLanguage The sentence detector. Returns Pipeline This. Exceptions ArgumentNullException sentenceDetector With(StemmerLanguage) Withes the specified stemmer. public Pipeline With(StemmerLanguage stemmer) Parameters stemmer StemmerLanguage The stemmer. Returns Pipeline This. Exceptions ArgumentNullException stemmer With(StopWordsLanguage) Withes the specified stop words. public Pipeline With(StopWordsLanguage stopWords) Parameters stopWords StopWordsLanguage The stop words. Returns Pipeline This. Exceptions ArgumentNullException stopWords With(TokenizerLanguage) Withes the specified tokenizer language. public Pipeline With(TokenizerLanguage tokenizer) Parameters tokenizer TokenizerLanguage The tokenizer to use. Returns Pipeline This. Exceptions ArgumentNullException tokenizerLanguage"
  },
  "api/Enlighten.SentenceDetection.DefaultSentenceDetector.html": {
    "href": "api/Enlighten.SentenceDetection.DefaultSentenceDetector.html",
    "title": "Class DefaultSentenceDetector | Enlighten API Reference",
    "keywords": "Class DefaultSentenceDetector Namespace Enlighten.SentenceDetection Assembly Enlighten.dll Default sentence detector public class DefaultSentenceDetector : ISentenceDetector Inheritance object DefaultSentenceDetector Implements ISentenceDetector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultSentenceDetector(IEnumerable<IDetector>, ITokenizer) Initializes a new instance of the DefaultSentenceDetector class. public DefaultSentenceDetector(IEnumerable<IDetector> detectors, ITokenizer tokenizer) Parameters detectors IEnumerable<IDetector> The detectors. tokenizer ITokenizer The tokenizer. Properties Detectors Gets the detectors. public Dictionary<string, IDetector> Detectors { get; } Property Value Dictionary<string, IDetector> The detectors. Tokenizer Gets the tokenizer. public ITokenizer Tokenizer { get; } Property Value ITokenizer The tokenizer. Methods Detect(Token[], SentenceDetectorLanguage) Detects the sentences in the specified input. public Sentence[] Detect(Token[] input, SentenceDetectorLanguage detector) Parameters input Token[] The input. detector SentenceDetectorLanguage The detector. Returns Sentence[] The sentences. Detect(string, SentenceDetectorLanguage) Detects the sentences in the specified input. public Sentence[] Detect(string input, SentenceDetectorLanguage detector) Parameters input string The input. detector SentenceDetectorLanguage The detector. Returns Sentence[] The sentences. See Also ISentenceDetector"
  },
  "api/Enlighten.SentenceDetection.Detectors.DefaultDetector.html": {
    "href": "api/Enlighten.SentenceDetection.Detectors.DefaultDetector.html",
    "title": "Class DefaultDetector | Enlighten API Reference",
    "keywords": "Class DefaultDetector Namespace Enlighten.SentenceDetection.Detectors Assembly Enlighten.dll Default detector public class DefaultDetector : IDetector Inheritance object DefaultDetector Implements IDetector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods DetectSentences(Token[]) Detects the sentences. public Sentence[] DetectSentences(Token[] tokens) Parameters tokens Token[] The tokens. Returns Sentence[] The sentences found based on the tokens. See Also IDetector"
  },
  "api/Enlighten.SentenceDetection.Detectors.NewLineDetector.html": {
    "href": "api/Enlighten.SentenceDetection.Detectors.NewLineDetector.html",
    "title": "Class NewLineDetector | Enlighten API Reference",
    "keywords": "Class NewLineDetector Namespace Enlighten.SentenceDetection.Detectors Assembly Enlighten.dll New line detector public class NewLineDetector : IDetector Inheritance object NewLineDetector Implements IDetector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods DetectSentences(Token[]) Detects the sentences. public Sentence[] DetectSentences(Token[] tokens) Parameters tokens Token[] The tokens. Returns Sentence[] The sentences found based on the tokens. See Also IDetector"
  },
  "api/Enlighten.SentenceDetection.Detectors.html": {
    "href": "api/Enlighten.SentenceDetection.Detectors.html",
    "title": "Namespace Enlighten.SentenceDetection.Detectors | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SentenceDetection.Detectors Classes DefaultDetector Default detector NewLineDetector New line detector"
  },
  "api/Enlighten.SentenceDetection.Enum.SentenceDetectorLanguage.html": {
    "href": "api/Enlighten.SentenceDetection.Enum.SentenceDetectorLanguage.html",
    "title": "Class SentenceDetectorLanguage | Enlighten API Reference",
    "keywords": "Class SentenceDetectorLanguage Namespace Enlighten.SentenceDetection.Enum Assembly Enlighten.dll Sentence detector language public class SentenceDetectorLanguage : StringEnumBaseClass<SentenceDetectorLanguage> Inheritance object StringEnumBaseClass<SentenceDetectorLanguage> SentenceDetectorLanguage Inherited Members StringEnumBaseClass<SentenceDetectorLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<SentenceDetectorLanguage>.ToString() StringEnumBaseClass<SentenceDetectorLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SentenceDetectorLanguage() Initializes a new instance of the SentenceDetectorLanguage class. public SentenceDetectorLanguage() SentenceDetectorLanguage(string) Initializes a new instance of the SentenceDetectorLanguage class. public SentenceDetectorLanguage(string name) Parameters name string The name. Properties Default Gets the default. public static SentenceDetectorLanguage Default { get; } Property Value SentenceDetectorLanguage The default. NewLine Gets the new line. public static SentenceDetectorLanguage NewLine { get; } Property Value SentenceDetectorLanguage The new line. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.SentenceDetection.Enum.html": {
    "href": "api/Enlighten.SentenceDetection.Enum.html",
    "title": "Namespace Enlighten.SentenceDetection.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SentenceDetection.Enum Classes SentenceDetectorLanguage Sentence detector language"
  },
  "api/Enlighten.SentenceDetection.Interfaces.IDetector.html": {
    "href": "api/Enlighten.SentenceDetection.Interfaces.IDetector.html",
    "title": "Interface IDetector | Enlighten API Reference",
    "keywords": "Interface IDetector Namespace Enlighten.SentenceDetection.Interfaces Assembly Enlighten.dll Detector interface public interface IDetector Properties Name Gets the name. string Name { get; } Property Value string The name. Methods DetectSentences(Token[]) Detects the sentences. Sentence[] DetectSentences(Token[] tokens) Parameters tokens Token[] The tokens. Returns Sentence[] The sentences found based on the tokens."
  },
  "api/Enlighten.SentenceDetection.Interfaces.ISentenceDetector.html": {
    "href": "api/Enlighten.SentenceDetection.Interfaces.ISentenceDetector.html",
    "title": "Interface ISentenceDetector | Enlighten API Reference",
    "keywords": "Interface ISentenceDetector Namespace Enlighten.SentenceDetection.Interfaces Assembly Enlighten.dll Sentence detector interface public interface ISentenceDetector Methods Detect(Token[], SentenceDetectorLanguage) Detects the sentences in the specified input. Sentence[] Detect(Token[] input, SentenceDetectorLanguage detector) Parameters input Token[] The input. detector SentenceDetectorLanguage The detector. Returns Sentence[] The sentences. Detect(string, SentenceDetectorLanguage) Detects the sentences in the specified input. Sentence[] Detect(string input, SentenceDetectorLanguage detector) Parameters input string The input. detector SentenceDetectorLanguage The detector. Returns Sentence[] The sentences."
  },
  "api/Enlighten.SentenceDetection.Interfaces.html": {
    "href": "api/Enlighten.SentenceDetection.Interfaces.html",
    "title": "Namespace Enlighten.SentenceDetection.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SentenceDetection.Interfaces Interfaces IDetector Detector interface ISentenceDetector Sentence detector interface"
  },
  "api/Enlighten.SentenceDetection.Sentence.html": {
    "href": "api/Enlighten.SentenceDetection.Sentence.html",
    "title": "Class Sentence | Enlighten API Reference",
    "keywords": "Class Sentence Namespace Enlighten.SentenceDetection Assembly Enlighten.dll Sentence data holder public class Sentence Inheritance object Sentence Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Sentence(int, int, Token[]) Initializes a new instance of the Sentence class. public Sentence(int endPosition, int startPosition, Token[] tokens) Parameters endPosition int The end position. startPosition int The start position. tokens Token[] The tokens. Properties EndPosition Gets or sets the end position. (inclusive) public int EndPosition { get; set; } Property Value int The end position. StartPosition Gets or sets the start position. (inclusive) public int StartPosition { get; set; } Property Value int The start position. Tokens Gets or sets the tokens. public Token[] Tokens { get; set; } Property Value Token[] The tokens. Methods ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance."
  },
  "api/Enlighten.SentenceDetection.html": {
    "href": "api/Enlighten.SentenceDetection.html",
    "title": "Namespace Enlighten.SentenceDetection | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SentenceDetection Classes DefaultSentenceDetector Default sentence detector Sentence Sentence data holder"
  },
  "api/Enlighten.Stemmer.BaseClasses.StemmerLanguageBaseClass.html": {
    "href": "api/Enlighten.Stemmer.BaseClasses.StemmerLanguageBaseClass.html",
    "title": "Class StemmerLanguageBaseClass | Enlighten API Reference",
    "keywords": "Class StemmerLanguageBaseClass Namespace Enlighten.Stemmer.BaseClasses Assembly Enlighten.dll Stemmer language base class public abstract class StemmerLanguageBaseClass : IStemmerLanguage Inheritance object StemmerLanguageBaseClass Implements IStemmerLanguage Derived EnglishLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StemmerLanguageBaseClass() Initializes a new instance of the StemmerLanguageBaseClass class. protected StemmerLanguageBaseClass() Properties ISOCode Gets the name. public abstract string ISOCode { get; } Property Value string The name. Vowels Gets the vowels. protected abstract char[] Vowels { get; } Property Value char[] The vowels. Methods IsVowel(char) Determines whether the specified character is a vowel. protected bool IsVowel(char character) Parameters character char The character. Returns bool true if the specified character is a vowel; otherwise, false. StemWord(string) Stems the word. protected abstract string StemWord(string word) Parameters word string The word. Returns string The stemmed word. StemWords(string[]) Stems the words. public string[] StemWords(string[] words) Parameters words string[] The words. Returns string[] The resulting stemmed words. See Also IStemmerLanguage"
  },
  "api/Enlighten.Stemmer.BaseClasses.html": {
    "href": "api/Enlighten.Stemmer.BaseClasses.html",
    "title": "Namespace Enlighten.Stemmer.BaseClasses | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Stemmer.BaseClasses Classes StemmerLanguageBaseClass Stemmer language base class"
  },
  "api/Enlighten.Stemmer.DefaultStemmer.html": {
    "href": "api/Enlighten.Stemmer.DefaultStemmer.html",
    "title": "Class DefaultStemmer | Enlighten API Reference",
    "keywords": "Class DefaultStemmer Namespace Enlighten.Stemmer Assembly Enlighten.dll Default stemmer public class DefaultStemmer : IStemmer Inheritance object DefaultStemmer Implements IStemmer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultStemmer(IEnumerable<IStemmerLanguage>) Initializes a new instance of the DefaultStemmer class. public DefaultStemmer(IEnumerable<IStemmerLanguage> languages) Parameters languages IEnumerable<IStemmerLanguage> The languages. Properties Languages Gets the languages. public Dictionary<string, IStemmerLanguage> Languages { get; } Property Value Dictionary<string, IStemmerLanguage> The languages. Methods Stem(Token[], StemmerLanguage) Stems the specified tokens. public Token[] Stem(Token[] tokens, StemmerLanguage language) Parameters tokens Token[] The tokens. language StemmerLanguage The language. Returns Token[] The resulting stemmed tokens. Stem(string[], StemmerLanguage) Stems the words. public string[] Stem(string[] words, StemmerLanguage language) Parameters words string[] The words. language StemmerLanguage Returns string[] The resulting stemmed words. See Also IStemmer"
  },
  "api/Enlighten.Stemmer.Enums.StemmerLanguage.html": {
    "href": "api/Enlighten.Stemmer.Enums.StemmerLanguage.html",
    "title": "Class StemmerLanguage | Enlighten API Reference",
    "keywords": "Class StemmerLanguage Namespace Enlighten.Stemmer.Enums Assembly Enlighten.dll Language enum public class StemmerLanguage : StringEnumBaseClass<StemmerLanguage> Inheritance object StringEnumBaseClass<StemmerLanguage> StemmerLanguage Inherited Members StringEnumBaseClass<StemmerLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<StemmerLanguage>.ToString() StringEnumBaseClass<StemmerLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StemmerLanguage() Initializes a new instance of the StemmerLanguage class. public StemmerLanguage() StemmerLanguage(string) Initializes a new instance of the StemmerLanguage class. public StemmerLanguage(string name) Parameters name string The name. Properties EnglishPorter2 Gets the english rule based tokenizer. public static StemmerLanguage EnglishPorter2 { get; } Property Value StemmerLanguage The english rule based tokenizer. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.Stemmer.Enums.html": {
    "href": "api/Enlighten.Stemmer.Enums.html",
    "title": "Namespace Enlighten.Stemmer.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Stemmer.Enums Classes StemmerLanguage Language enum"
  },
  "api/Enlighten.Stemmer.Interfaces.IStemmer.html": {
    "href": "api/Enlighten.Stemmer.Interfaces.IStemmer.html",
    "title": "Interface IStemmer | Enlighten API Reference",
    "keywords": "Interface IStemmer Namespace Enlighten.Stemmer.Interfaces Assembly Enlighten.dll Stemmer interface public interface IStemmer Methods Stem(Token[], StemmerLanguage) Stems the specified tokens. Token[] Stem(Token[] tokens, StemmerLanguage language) Parameters tokens Token[] The tokens. language StemmerLanguage The language. Returns Token[] The resulting stemmed tokens. Stem(string[], StemmerLanguage) Stems the words. string[] Stem(string[] words, StemmerLanguage language) Parameters words string[] The words. language StemmerLanguage Stemmer interface Returns string[] The resulting stemmed words."
  },
  "api/Enlighten.Stemmer.Interfaces.IStemmerLanguage.html": {
    "href": "api/Enlighten.Stemmer.Interfaces.IStemmerLanguage.html",
    "title": "Interface IStemmerLanguage | Enlighten API Reference",
    "keywords": "Interface IStemmerLanguage Namespace Enlighten.Stemmer.Interfaces Assembly Enlighten.dll Stemmer language interface public interface IStemmerLanguage Properties ISOCode Gets the name. string ISOCode { get; } Property Value string The name. Methods StemWords(string[]) Stems the words. string[] StemWords(string[] words) Parameters words string[] The words. Returns string[] The resulting stemmed words."
  },
  "api/Enlighten.Stemmer.Interfaces.html": {
    "href": "api/Enlighten.Stemmer.Interfaces.html",
    "title": "Namespace Enlighten.Stemmer.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Stemmer.Interfaces Interfaces IStemmer Stemmer interface IStemmerLanguage Stemmer language interface"
  },
  "api/Enlighten.Stemmer.Languages.EnglishLanguage.html": {
    "href": "api/Enlighten.Stemmer.Languages.EnglishLanguage.html",
    "title": "Class EnglishLanguage | Enlighten API Reference",
    "keywords": "Class EnglishLanguage Namespace Enlighten.Stemmer.Languages Assembly Enlighten.dll English language public class EnglishLanguage : StemmerLanguageBaseClass, IStemmerLanguage Inheritance object StemmerLanguageBaseClass EnglishLanguage Implements IStemmerLanguage Inherited Members StemmerLanguageBaseClass.StemWords(string[]) StemmerLanguageBaseClass.IsVowel(char) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ISOCode Gets the name. public override string ISOCode { get; } Property Value string The name. Vowels Gets the vowels. protected override char[] Vowels { get; } Property Value char[] The vowels. Methods StemWord(string) Stems the word. protected override string StemWord(string word) Parameters word string The word. Returns string The stemmed word. See Also StemmerLanguageBaseClass"
  },
  "api/Enlighten.Stemmer.Languages.html": {
    "href": "api/Enlighten.Stemmer.Languages.html",
    "title": "Namespace Enlighten.Stemmer.Languages | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Stemmer.Languages Classes EnglishLanguage English language"
  },
  "api/Enlighten.Stemmer.html": {
    "href": "api/Enlighten.Stemmer.html",
    "title": "Namespace Enlighten.Stemmer | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Stemmer Classes DefaultStemmer Default stemmer"
  },
  "api/Enlighten.StopWords.BaseClasses.StopWordsBase.html": {
    "href": "api/Enlighten.StopWords.BaseClasses.StopWordsBase.html",
    "title": "Class StopWordsBase | Enlighten API Reference",
    "keywords": "Class StopWordsBase Namespace Enlighten.StopWords.BaseClasses Assembly Enlighten.dll Stop words base public abstract class StopWordsBase : IStopWordsLanguage Inheritance object StopWordsBase Implements IStopWordsLanguage Derived EnglishDefault EnglishSpacy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public abstract string Name { get; } Property Value string The name. StopWords Gets the stop words. protected abstract HashSet<string> StopWords { get; } Property Value HashSet<string> The stop words. Methods IsStopWord(string) Determines whether [the specified token] [is a stop word]. public bool IsStopWord(string token) Parameters token string The token. Returns bool true if [the specified token] [is a stop word]; otherwise, false. MarkStopWords(Token[]) Marks the stop words. public Token[] MarkStopWords(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The tokens. See Also IStopWordsLanguage"
  },
  "api/Enlighten.StopWords.BaseClasses.html": {
    "href": "api/Enlighten.StopWords.BaseClasses.html",
    "title": "Namespace Enlighten.StopWords.BaseClasses | Enlighten API Reference",
    "keywords": "Namespace Enlighten.StopWords.BaseClasses Classes StopWordsBase Stop words base"
  },
  "api/Enlighten.StopWords.Enum.StopWordsLanguage.html": {
    "href": "api/Enlighten.StopWords.Enum.StopWordsLanguage.html",
    "title": "Class StopWordsLanguage | Enlighten API Reference",
    "keywords": "Class StopWordsLanguage Namespace Enlighten.StopWords.Enum Assembly Enlighten.dll Stop words language public class StopWordsLanguage : StringEnumBaseClass<StopWordsLanguage> Inheritance object StringEnumBaseClass<StopWordsLanguage> StopWordsLanguage Inherited Members StringEnumBaseClass<StopWordsLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<StopWordsLanguage>.ToString() StringEnumBaseClass<StopWordsLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StopWordsLanguage() Initializes a new instance of the StopWordsLanguage class. public StopWordsLanguage() StopWordsLanguage(string) Initializes a new instance of the StopWordsLanguage class. public StopWordsLanguage(string name) Parameters name string The name. Properties English Gets the english default stop words. public static StopWordsLanguage English { get; } Property Value StopWordsLanguage The english default stop words. EnglishSpacy Gets the english spacy. public static StopWordsLanguage EnglishSpacy { get; } Property Value StopWordsLanguage The english spacy. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.StopWords.Enum.html": {
    "href": "api/Enlighten.StopWords.Enum.html",
    "title": "Namespace Enlighten.StopWords.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.StopWords.Enum Classes StopWordsLanguage Stop words language"
  },
  "api/Enlighten.StopWords.Interfaces.IStopWordsLanguage.html": {
    "href": "api/Enlighten.StopWords.Interfaces.IStopWordsLanguage.html",
    "title": "Interface IStopWordsLanguage | Enlighten API Reference",
    "keywords": "Interface IStopWordsLanguage Namespace Enlighten.StopWords.Interfaces Assembly Enlighten.dll Stop words language public interface IStopWordsLanguage Properties Name Gets the name. string Name { get; } Property Value string The name. Methods IsStopWord(string) Determines whether [the specified token] [is a stop word]. bool IsStopWord(string token) Parameters token string The token. Returns bool true if [the specified token] [is a stop word]; otherwise, false. MarkStopWords(Token[]) Marks the stop words. Token[] MarkStopWords(Token[] tokens) Parameters tokens Token[] The tokens. Returns Token[] The tokens."
  },
  "api/Enlighten.StopWords.Interfaces.IStopWordsManager.html": {
    "href": "api/Enlighten.StopWords.Interfaces.IStopWordsManager.html",
    "title": "Interface IStopWordsManager | Enlighten API Reference",
    "keywords": "Interface IStopWordsManager Namespace Enlighten.StopWords.Interfaces Assembly Enlighten.dll Stop words manager interface public interface IStopWordsManager Methods IsStopWord(string, StopWordsLanguage) Determines whether [the specified token] [is a stop word]. bool IsStopWord(string token, StopWordsLanguage language) Parameters token string The token. language StopWordsLanguage The language. Returns bool true if [the specified token] [is a stop word]; otherwise, false. MarkStopWords(Token[], StopWordsLanguage) Marks the stop words. Token[] MarkStopWords(Token[] tokens, StopWordsLanguage language) Parameters tokens Token[] The tokens. language StopWordsLanguage The language. Returns Token[] The tokens."
  },
  "api/Enlighten.StopWords.Interfaces.html": {
    "href": "api/Enlighten.StopWords.Interfaces.html",
    "title": "Namespace Enlighten.StopWords.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.StopWords.Interfaces Interfaces IStopWordsLanguage Stop words language IStopWordsManager Stop words manager interface"
  },
  "api/Enlighten.StopWords.Languages.EnglishDefault.html": {
    "href": "api/Enlighten.StopWords.Languages.EnglishDefault.html",
    "title": "Class EnglishDefault | Enlighten API Reference",
    "keywords": "Class EnglishDefault Namespace Enlighten.StopWords.Languages Assembly Enlighten.dll English default stop words public class EnglishDefault : StopWordsBase, IStopWordsLanguage Inheritance object StopWordsBase EnglishDefault Implements IStopWordsLanguage Inherited Members StopWordsBase.IsStopWord(string) StopWordsBase.MarkStopWords(Token[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public override string Name { get; } Property Value string The name. StopWords Gets the stop words. protected override HashSet<string> StopWords { get; } Property Value HashSet<string> The stop words. See Also IStopWordsLanguage"
  },
  "api/Enlighten.StopWords.Languages.EnglishSpacy.html": {
    "href": "api/Enlighten.StopWords.Languages.EnglishSpacy.html",
    "title": "Class EnglishSpacy | Enlighten API Reference",
    "keywords": "Class EnglishSpacy Namespace Enlighten.StopWords.Languages Assembly Enlighten.dll English stop words used in Spacy public class EnglishSpacy : StopWordsBase, IStopWordsLanguage Inheritance object StopWordsBase EnglishSpacy Implements IStopWordsLanguage Inherited Members StopWordsBase.IsStopWord(string) StopWordsBase.MarkStopWords(Token[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public override string Name { get; } Property Value string The name. StopWords Gets the stop words. protected override HashSet<string> StopWords { get; } Property Value HashSet<string> The stop words. See Also StopWordsBase"
  },
  "api/Enlighten.StopWords.Languages.html": {
    "href": "api/Enlighten.StopWords.Languages.html",
    "title": "Namespace Enlighten.StopWords.Languages | Enlighten API Reference",
    "keywords": "Namespace Enlighten.StopWords.Languages Classes EnglishDefault English default stop words EnglishSpacy English stop words used in Spacy"
  },
  "api/Enlighten.StopWords.StopWordsManager.html": {
    "href": "api/Enlighten.StopWords.StopWordsManager.html",
    "title": "Class StopWordsManager | Enlighten API Reference",
    "keywords": "Class StopWordsManager Namespace Enlighten.StopWords Assembly Enlighten.dll Stop words manager public class StopWordsManager : IStopWordsManager Inheritance object StopWordsManager Implements IStopWordsManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StopWordsManager(IEnumerable<IStopWordsLanguage>) Initializes a new instance of the StopWordsManager class. public StopWordsManager(IEnumerable<IStopWordsLanguage> stopWordsLanguages) Parameters stopWordsLanguages IEnumerable<IStopWordsLanguage> The stop words languages. Properties StopWordsLanguages Gets the stop words languages. public Dictionary<string, IStopWordsLanguage> StopWordsLanguages { get; } Property Value Dictionary<string, IStopWordsLanguage> The stop words languages. Methods IsStopWord(string, StopWordsLanguage) Determines whether [the specified token] [is a stop word]. public bool IsStopWord(string token, StopWordsLanguage language) Parameters token string The token. language StopWordsLanguage The language. Returns bool true if [the specified token] [is a stop word]; otherwise, false. MarkStopWords(Token[], StopWordsLanguage) Marks the stop words. public Token[] MarkStopWords(Token[] tokens, StopWordsLanguage language) Parameters tokens Token[] The tokens. language StopWordsLanguage The language. Returns Token[] The tokens. See Also IStopWordsManager"
  },
  "api/Enlighten.StopWords.html": {
    "href": "api/Enlighten.StopWords.html",
    "title": "Namespace Enlighten.StopWords | Enlighten API Reference",
    "keywords": "Namespace Enlighten.StopWords Classes StopWordsManager Stop words manager"
  },
  "api/Enlighten.SynonymFinder.BaseClasses.SynonymFinderBase.html": {
    "href": "api/Enlighten.SynonymFinder.BaseClasses.SynonymFinderBase.html",
    "title": "Class SynonymFinderBase | Enlighten API Reference",
    "keywords": "Class SynonymFinderBase Namespace Enlighten.SynonymFinder.BaseClasses Assembly Enlighten.dll Synonym finder base class public abstract class SynonymFinderBase : ISynonymFinderLanguage Inheritance object SynonymFinderBase Implements ISynonymFinderLanguage Derived EnglishFinder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SynonymFinderBase() Initializes a new instance of the SynonymFinderBase class. protected SynonymFinderBase() Properties Name Gets the name. public abstract string Name { get; } Property Value string The name. SynonymDictionary Gets the synonym dictionary. protected Dictionary<string, string> SynonymDictionary { get; } Property Value Dictionary<string, string> The synonym dictionary. Methods FindSynonym(string) Finds the synonym if it exists. public string FindSynonym(string input) Parameters input string The input. Returns string The synonym or the input if it doesn't exist. See Also ISynonymFinderLanguage"
  },
  "api/Enlighten.SynonymFinder.BaseClasses.html": {
    "href": "api/Enlighten.SynonymFinder.BaseClasses.html",
    "title": "Namespace Enlighten.SynonymFinder.BaseClasses | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SynonymFinder.BaseClasses Classes SynonymFinderBase Synonym finder base class"
  },
  "api/Enlighten.SynonymFinder.DefaultSynonymFinder.html": {
    "href": "api/Enlighten.SynonymFinder.DefaultSynonymFinder.html",
    "title": "Class DefaultSynonymFinder | Enlighten API Reference",
    "keywords": "Class DefaultSynonymFinder Namespace Enlighten.SynonymFinder Assembly Enlighten.dll Default synonym finder public class DefaultSynonymFinder : ISynonymFinder Inheritance object DefaultSynonymFinder Implements ISynonymFinder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultSynonymFinder(IEnumerable<ISynonymFinderLanguage>) Initializes a new instance of the DefaultSynonymFinder class. public DefaultSynonymFinder(IEnumerable<ISynonymFinderLanguage> languages) Parameters languages IEnumerable<ISynonymFinderLanguage> The languages. Properties Languages Gets the languages. public Dictionary<string, ISynonymFinderLanguage> Languages { get; } Property Value Dictionary<string, ISynonymFinderLanguage> The languages. Methods FindSynonym(string, SynonymFinderLanguage) Finds the synonym if it exists. public string FindSynonym(string input, SynonymFinderLanguage language) Parameters input string The input. language SynonymFinderLanguage The language. Returns string The synonym or the input if it doesn't exist. FindSynonyms(Token[], SynonymFinderLanguage) Finds the synonyms and replaces the text. public Token[] FindSynonyms(Token[] tokens, SynonymFinderLanguage language) Parameters tokens Token[] The tokens. language SynonymFinderLanguage The language. Returns Token[] The tokens See Also ISynonymFinder"
  },
  "api/Enlighten.SynonymFinder.Enum.SynonymFinderLanguage.html": {
    "href": "api/Enlighten.SynonymFinder.Enum.SynonymFinderLanguage.html",
    "title": "Class SynonymFinderLanguage | Enlighten API Reference",
    "keywords": "Class SynonymFinderLanguage Namespace Enlighten.SynonymFinder.Enum Assembly Enlighten.dll Part of speech tagger language public class SynonymFinderLanguage : StringEnumBaseClass<SynonymFinderLanguage> Inheritance object StringEnumBaseClass<SynonymFinderLanguage> SynonymFinderLanguage Inherited Members StringEnumBaseClass<SynonymFinderLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<SynonymFinderLanguage>.ToString() StringEnumBaseClass<SynonymFinderLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SynonymFinderLanguage() Initializes a new instance of the SynonymFinderLanguage class. public SynonymFinderLanguage() SynonymFinderLanguage(string) Initializes a new instance of the SynonymFinderLanguage class. public SynonymFinderLanguage(string name) Parameters name string The name. Properties English Gets the english. public static SynonymFinderLanguage English { get; } Property Value SynonymFinderLanguage The english. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.SynonymFinder.Enum.html": {
    "href": "api/Enlighten.SynonymFinder.Enum.html",
    "title": "Namespace Enlighten.SynonymFinder.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SynonymFinder.Enum Classes SynonymFinderLanguage Part of speech tagger language"
  },
  "api/Enlighten.SynonymFinder.Finders.EnglishFinder.html": {
    "href": "api/Enlighten.SynonymFinder.Finders.EnglishFinder.html",
    "title": "Class EnglishFinder | Enlighten API Reference",
    "keywords": "Class EnglishFinder Namespace Enlighten.SynonymFinder.Finders Assembly Enlighten.dll English synonym finder public class EnglishFinder : SynonymFinderBase, ISynonymFinderLanguage Inheritance object SynonymFinderBase EnglishFinder Implements ISynonymFinderLanguage Inherited Members SynonymFinderBase.SynonymDictionary SynonymFinderBase.FindSynonym(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name. public override string Name { get; } Property Value string The name. See Also ISynonymFinderLanguage"
  },
  "api/Enlighten.SynonymFinder.Finders.html": {
    "href": "api/Enlighten.SynonymFinder.Finders.html",
    "title": "Namespace Enlighten.SynonymFinder.Finders | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SynonymFinder.Finders Classes EnglishFinder English synonym finder"
  },
  "api/Enlighten.SynonymFinder.Interfaces.ISynonymFinder.html": {
    "href": "api/Enlighten.SynonymFinder.Interfaces.ISynonymFinder.html",
    "title": "Interface ISynonymFinder | Enlighten API Reference",
    "keywords": "Interface ISynonymFinder Namespace Enlighten.SynonymFinder.Interfaces Assembly Enlighten.dll Synonym finder public interface ISynonymFinder Methods FindSynonym(string, SynonymFinderLanguage) Finds the synonym if it exists. string FindSynonym(string input, SynonymFinderLanguage language) Parameters input string The input. language SynonymFinderLanguage The language. Returns string The synonym or the input if it doesn't exist. FindSynonyms(Token[], SynonymFinderLanguage) Finds the synonyms and replaces the text. Token[] FindSynonyms(Token[] tokens, SynonymFinderLanguage language) Parameters tokens Token[] The tokens. language SynonymFinderLanguage The language. Returns Token[] The tokens"
  },
  "api/Enlighten.SynonymFinder.Interfaces.ISynonymFinderLanguage.html": {
    "href": "api/Enlighten.SynonymFinder.Interfaces.ISynonymFinderLanguage.html",
    "title": "Interface ISynonymFinderLanguage | Enlighten API Reference",
    "keywords": "Interface ISynonymFinderLanguage Namespace Enlighten.SynonymFinder.Interfaces Assembly Enlighten.dll Synonym finder language interface public interface ISynonymFinderLanguage Properties Name Gets the name. string Name { get; } Property Value string The name. Methods FindSynonym(string) Finds the synonym if it exists. string FindSynonym(string input) Parameters input string The input. Returns string The synonym or the input if it doesn't exist."
  },
  "api/Enlighten.SynonymFinder.Interfaces.html": {
    "href": "api/Enlighten.SynonymFinder.Interfaces.html",
    "title": "Namespace Enlighten.SynonymFinder.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SynonymFinder.Interfaces Interfaces ISynonymFinder Synonym finder ISynonymFinderLanguage Synonym finder language interface"
  },
  "api/Enlighten.SynonymFinder.html": {
    "href": "api/Enlighten.SynonymFinder.html",
    "title": "Namespace Enlighten.SynonymFinder | Enlighten API Reference",
    "keywords": "Namespace Enlighten.SynonymFinder Classes DefaultSynonymFinder Default synonym finder"
  },
  "api/Enlighten.TextSummarization.DefaultTextSummarizer.html": {
    "href": "api/Enlighten.TextSummarization.DefaultTextSummarizer.html",
    "title": "Class DefaultTextSummarizer | Enlighten API Reference",
    "keywords": "Class DefaultTextSummarizer Namespace Enlighten.TextSummarization Assembly Enlighten.dll Class handles basic text public class DefaultTextSummarizer : ITextSummarizer Inheritance object DefaultTextSummarizer Implements ITextSummarizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultTextSummarizer(IEnumerable<ITextSummarizerLanguage>) Initializes a new instance of the DefaultTextSummarizer class. public DefaultTextSummarizer(IEnumerable<ITextSummarizerLanguage> summarizers) Parameters summarizers IEnumerable<ITextSummarizerLanguage> The summarizers. Properties Summarizers Gets the summarizers. public Dictionary<string, ITextSummarizerLanguage> Summarizers { get; } Property Value Dictionary<string, ITextSummarizerLanguage> The summarizers. Methods Summarize(Document, int, TextSummarizationLanguage) Summarizes the specified text. public Document Summarize(Document text, int sentenceCount, TextSummarizationLanguage language) Parameters text Document The text. sentenceCount int The number of sentences to have in the final text. language TextSummarizationLanguage The language. Returns Document The summarized text Summarize(Document, float, TextSummarizationLanguage) Summarizes the specified text. public Document Summarize(Document text, float percentage, TextSummarizationLanguage language) Parameters text Document The text. percentage float The percentage of sentences to have in the final text. language TextSummarizationLanguage The language. Returns Document The summarized text"
  },
  "api/Enlighten.TextSummarization.Enum.TextSummarizationLanguage.html": {
    "href": "api/Enlighten.TextSummarization.Enum.TextSummarizationLanguage.html",
    "title": "Class TextSummarizationLanguage | Enlighten API Reference",
    "keywords": "Class TextSummarizationLanguage Namespace Enlighten.TextSummarization.Enum Assembly Enlighten.dll Text summarization language public class TextSummarizationLanguage : StringEnumBaseClass<TextSummarizationLanguage> Inheritance object StringEnumBaseClass<TextSummarizationLanguage> TextSummarizationLanguage Inherited Members StringEnumBaseClass<TextSummarizationLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<TextSummarizationLanguage>.ToString() StringEnumBaseClass<TextSummarizationLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextSummarizationLanguage() Initializes a new instance of the TextSummarizationLanguage class. public TextSummarizationLanguage() TextSummarizationLanguage(string) Initializes a new instance of the TextSummarizationLanguage class. public TextSummarizationLanguage(string name) Parameters name string The name. Properties EnglishDefault Gets the default for english. (Uses TF-IDF) public static TextSummarizationLanguage EnglishDefault { get; } Property Value TextSummarizationLanguage The default. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.TextSummarization.Enum.html": {
    "href": "api/Enlighten.TextSummarization.Enum.html",
    "title": "Namespace Enlighten.TextSummarization.Enum | Enlighten API Reference",
    "keywords": "Namespace Enlighten.TextSummarization.Enum Classes TextSummarizationLanguage Text summarization language"
  },
  "api/Enlighten.TextSummarization.Interfaces.ITextSummarizer.html": {
    "href": "api/Enlighten.TextSummarization.Interfaces.ITextSummarizer.html",
    "title": "Interface ITextSummarizer | Enlighten API Reference",
    "keywords": "Interface ITextSummarizer Namespace Enlighten.TextSummarization.Interfaces Assembly Enlighten.dll Text summarizer interface public interface ITextSummarizer Methods Summarize(Document, int, TextSummarizationLanguage) Summarizes the specified text. Document Summarize(Document text, int sentenceCount, TextSummarizationLanguage language) Parameters text Document The text. sentenceCount int The number of sentences to have in the final text. language TextSummarizationLanguage The language. Returns Document The summarized text Summarize(Document, float, TextSummarizationLanguage) Summarizes the specified text. Document Summarize(Document text, float percentage, TextSummarizationLanguage language) Parameters text Document The text. percentage float The percentage of sentences to have in the final text. language TextSummarizationLanguage The language. Returns Document The summarized text"
  },
  "api/Enlighten.TextSummarization.Interfaces.ITextSummarizerLanguage.html": {
    "href": "api/Enlighten.TextSummarization.Interfaces.ITextSummarizerLanguage.html",
    "title": "Interface ITextSummarizerLanguage | Enlighten API Reference",
    "keywords": "Interface ITextSummarizerLanguage Namespace Enlighten.TextSummarization.Interfaces Assembly Enlighten.dll Text summarizer language interface public interface ITextSummarizerLanguage Properties Name Gets the name. string Name { get; } Property Value string The name. Methods Summarize(Document, int) Summarizes the specified input. Document Summarize(Document input, int numberOfSentences) Parameters input Document The input. numberOfSentences int The number of sentences. Returns Document The summary Summarize(Document, float) Summarizes the specified input. Document Summarize(Document input, float percentage) Parameters input Document The input. percentage float The percentage. Returns Document The summary"
  },
  "api/Enlighten.TextSummarization.Interfaces.html": {
    "href": "api/Enlighten.TextSummarization.Interfaces.html",
    "title": "Namespace Enlighten.TextSummarization.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.TextSummarization.Interfaces Interfaces ITextSummarizer Text summarizer interface ITextSummarizerLanguage Text summarizer language interface"
  },
  "api/Enlighten.TextSummarization.Languages.EnglishDefault.html": {
    "href": "api/Enlighten.TextSummarization.Languages.EnglishDefault.html",
    "title": "Class EnglishDefault | Enlighten API Reference",
    "keywords": "Class EnglishDefault Namespace Enlighten.TextSummarization.Languages Assembly Enlighten.dll English default summarizer public class EnglishDefault : ITextSummarizerLanguage Inheritance object EnglishDefault Implements ITextSummarizerLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnglishDefault(FrequencyAnalyzer) Initializes a new instance of the EnglishDefault class. public EnglishDefault(FrequencyAnalyzer frequencyAnalyzer) Parameters frequencyAnalyzer FrequencyAnalyzer The frequency analyzer. Exceptions ArgumentNullException tokenizer or stemmer or sentenceDetector or frequencyAnalyzer Properties FrequencyAnalyzer Gets the frequency analyzer. public FrequencyAnalyzer FrequencyAnalyzer { get; } Property Value FrequencyAnalyzer The frequency analyzer. Name Gets the name. public string Name { get; } Property Value string The name. Methods Summarize(Document, int) Summarizes the specified input. public Document Summarize(Document input, int numberOfSentences) Parameters input Document The input. numberOfSentences int The number of sentences. Returns Document The summary Summarize(Document, float) Summarizes the specified input. public Document Summarize(Document input, float percentage) Parameters input Document The input. percentage float The percentage. Returns Document The summary See Also ITextSummarizerLanguage"
  },
  "api/Enlighten.TextSummarization.Languages.html": {
    "href": "api/Enlighten.TextSummarization.Languages.html",
    "title": "Namespace Enlighten.TextSummarization.Languages | Enlighten API Reference",
    "keywords": "Namespace Enlighten.TextSummarization.Languages Classes EnglishDefault English default summarizer"
  },
  "api/Enlighten.TextSummarization.html": {
    "href": "api/Enlighten.TextSummarization.html",
    "title": "Namespace Enlighten.TextSummarization | Enlighten API Reference",
    "keywords": "Namespace Enlighten.TextSummarization Classes DefaultTextSummarizer Class handles basic text"
  },
  "api/Enlighten.Tokenizer.BaseClasses.SingleCharacterTokenFinderBaseClass.html": {
    "href": "api/Enlighten.Tokenizer.BaseClasses.SingleCharacterTokenFinderBaseClass.html",
    "title": "Class SingleCharacterTokenFinderBaseClass | Enlighten API Reference",
    "keywords": "Class SingleCharacterTokenFinderBaseClass Namespace Enlighten.Tokenizer.BaseClasses Assembly Enlighten.dll Single character token finder base class public abstract class SingleCharacterTokenFinderBaseClass : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass SingleCharacterTokenFinderBaseClass Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.Order TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SingleCharacterTokenFinderBaseClass() Initializes a new instance of the SingleCharacterTokenFinderBaseClass class. protected SingleCharacterTokenFinderBaseClass() Properties Character Gets the character. protected abstract char Character { get; } Property Value char The character. TokenType Gets the type of the token. protected abstract string TokenType { get; } Property Value string The type of the token. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.BaseClasses.TokenFinderBaseClass.html": {
    "href": "api/Enlighten.Tokenizer.BaseClasses.TokenFinderBaseClass.html",
    "title": "Class TokenFinderBaseClass | Enlighten API Reference",
    "keywords": "Class TokenFinderBaseClass Namespace Enlighten.Tokenizer.BaseClasses Assembly Enlighten.dll Token finder base class public abstract class TokenFinderBaseClass : IEnglishTokenFinder Inheritance object TokenFinderBaseClass Implements IEnglishTokenFinder Derived SingleCharacterTokenFinderBaseClass Abbreviation Ellipsis Email Emoji HashTag NewLine Number OtherTokenFinder RomanNumerals Symbol URL Username Whitespace Word Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenFinderBaseClass() Initializes a new instance of the TokenFinderBaseClass class. protected TokenFinderBaseClass() Properties Order Gets the order. public abstract int Order { get; } Property Value int The order. Methods IsMatch(TokenizableStream<char>) Determines whether the next set of item on the stream matches this finder. public Token? IsMatch(TokenizableStream<char> stream) Parameters stream TokenizableStream<char> The stream. Returns Token The token. IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected abstract Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also IEnglishTokenFinder"
  },
  "api/Enlighten.Tokenizer.BaseClasses.html": {
    "href": "api/Enlighten.Tokenizer.BaseClasses.html",
    "title": "Namespace Enlighten.Tokenizer.BaseClasses | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.BaseClasses Classes SingleCharacterTokenFinderBaseClass Single character token finder base class TokenFinderBaseClass Token finder base class"
  },
  "api/Enlighten.Tokenizer.DefaultTokenizer.html": {
    "href": "api/Enlighten.Tokenizer.DefaultTokenizer.html",
    "title": "Class DefaultTokenizer | Enlighten API Reference",
    "keywords": "Class DefaultTokenizer Namespace Enlighten.Tokenizer Assembly Enlighten.dll Default tokenizer public class DefaultTokenizer : ITokenizer Inheritance object DefaultTokenizer Implements ITokenizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultTokenizer(IEnumerable<ITokenizerLanguage>, ObjectPool<StringBuilder>) Initializes a new instance of the DefaultTokenizer class. public DefaultTokenizer(IEnumerable<ITokenizerLanguage> languages, ObjectPool<StringBuilder> objectPool) Parameters languages IEnumerable<ITokenizerLanguage> The languages. objectPool ObjectPool<StringBuilder> The object pool. Properties Languages Gets the languages. public Dictionary<string, ITokenizerLanguage> Languages { get; } Property Value Dictionary<string, ITokenizerLanguage> The languages. Methods Detokenize(Sentence[], TokenizerLanguage) Detokenizes the specified sentences. public string Detokenize(Sentence[] sentences, TokenizerLanguage language) Parameters sentences Sentence[] The sentences. language TokenizerLanguage The language. Returns string The resulting text. Detokenize(Token[], TokenizerLanguage) Detokenizes the specified tokens. public string Detokenize(Token[] tokens, TokenizerLanguage language) Parameters tokens Token[] The tokens. language TokenizerLanguage The language. Returns string The resulting text. Tokenize(string, TokenizerLanguage) Tokenizes the specified text. public Token[] Tokenize(string text, TokenizerLanguage language) Parameters text string The text. language TokenizerLanguage The language. Returns Token[] The tokens found. See Also ITokenizer"
  },
  "api/Enlighten.Tokenizer.Enums.TokenizerLanguage.html": {
    "href": "api/Enlighten.Tokenizer.Enums.TokenizerLanguage.html",
    "title": "Class TokenizerLanguage | Enlighten API Reference",
    "keywords": "Class TokenizerLanguage Namespace Enlighten.Tokenizer.Enums Assembly Enlighten.dll Language enum public class TokenizerLanguage : StringEnumBaseClass<TokenizerLanguage> Inheritance object StringEnumBaseClass<TokenizerLanguage> TokenizerLanguage Inherited Members StringEnumBaseClass<TokenizerLanguage>.ToStringEnumBaseClass(string) StringEnumBaseClass<TokenizerLanguage>.ToString() StringEnumBaseClass<TokenizerLanguage>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TokenizerLanguage() Initializes a new instance of the TokenizerLanguage class. public TokenizerLanguage() TokenizerLanguage(string) Initializes a new instance of the TokenizerLanguage class. public TokenizerLanguage(string name) Parameters name string The name. Properties EnglishRuleBased Gets the english rule based tokenizer. public static TokenizerLanguage EnglishRuleBased { get; } Property Value TokenizerLanguage The english rule based tokenizer. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.Tokenizer.Enums.html": {
    "href": "api/Enlighten.Tokenizer.Enums.html",
    "title": "Namespace Enlighten.Tokenizer.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Enums Classes TokenizerLanguage Language enum"
  },
  "api/Enlighten.Tokenizer.Interfaces.ITokenizer.html": {
    "href": "api/Enlighten.Tokenizer.Interfaces.ITokenizer.html",
    "title": "Interface ITokenizer | Enlighten API Reference",
    "keywords": "Interface ITokenizer Namespace Enlighten.Tokenizer.Interfaces Assembly Enlighten.dll Tokenizer interface public interface ITokenizer Methods Detokenize(Sentence[], TokenizerLanguage) Detokenizes the specified sentences. string Detokenize(Sentence[] sentences, TokenizerLanguage language) Parameters sentences Sentence[] The sentences. language TokenizerLanguage The language. Returns string The resulting text. Detokenize(Token[], TokenizerLanguage) Detokenizes the specified tokens. string Detokenize(Token[] tokens, TokenizerLanguage language) Parameters tokens Token[] The tokens. language TokenizerLanguage The language. Returns string The resulting text. Tokenize(string, TokenizerLanguage) Tokenizes the specified text. Token[] Tokenize(string text, TokenizerLanguage language) Parameters text string The text. language TokenizerLanguage The language. Returns Token[] The tokens found."
  },
  "api/Enlighten.Tokenizer.Interfaces.ITokenizerLanguage.html": {
    "href": "api/Enlighten.Tokenizer.Interfaces.ITokenizerLanguage.html",
    "title": "Interface ITokenizerLanguage | Enlighten API Reference",
    "keywords": "Interface ITokenizerLanguage Namespace Enlighten.Tokenizer.Interfaces Assembly Enlighten.dll Language interface public interface ITokenizerLanguage Properties ISOCode Gets the name. string ISOCode { get; } Property Value string The name. Methods Detokenize(Token[]) Detokenizes the specified tokens. string Detokenize(Token[] tokens) Parameters tokens Token[] The tokens. Returns string Converts the tokens into the equivalent string. Tokenize(TokenizableStream<char>) Tokenizes the specified text. Token[] Tokenize(TokenizableStream<char> text) Parameters text TokenizableStream<char> The text. Returns Token[] The tokenized version of the text."
  },
  "api/Enlighten.Tokenizer.Interfaces.html": {
    "href": "api/Enlighten.Tokenizer.Interfaces.html",
    "title": "Namespace Enlighten.Tokenizer.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Interfaces Interfaces ITokenizer Tokenizer interface ITokenizerLanguage Language interface"
  },
  "api/Enlighten.Tokenizer.Languages.English.EnglishLanguage.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.EnglishLanguage.html",
    "title": "Class EnglishLanguage | Enlighten API Reference",
    "keywords": "Class EnglishLanguage Namespace Enlighten.Tokenizer.Languages.English Assembly Enlighten.dll English language public class EnglishLanguage : ITokenizerLanguage Inheritance object EnglishLanguage Implements ITokenizerLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnglishLanguage(IEnumerable<IEnglishTokenFinder>) Initializes a new instance of the EnglishLanguage class. public EnglishLanguage(IEnumerable<IEnglishTokenFinder> tokenFinders) Parameters tokenFinders IEnumerable<IEnglishTokenFinder> English language Properties ISOCode Gets the name. public string ISOCode { get; } Property Value string The name. TokenFinders Gets the token finders. public IEnglishTokenFinder[] TokenFinders { get; } Property Value IEnglishTokenFinder[] The token finders. Methods Detokenize(Token[]) Detokenizes the specified tokens. public string Detokenize(Token[] tokens) Parameters tokens Token[] The tokens. Returns string Converts the tokens into the equivalent string. Tokenize(TokenizableStream<char>) Tokenizes the specified text. public Token[] Tokenize(TokenizableStream<char> text) Parameters text TokenizableStream<char> The text. Returns Token[] The tokenized version of the text. See Also ITokenizerLanguage"
  },
  "api/Enlighten.Tokenizer.Languages.English.Enums.TokenType.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.Enums.TokenType.html",
    "title": "Class TokenType | Enlighten API Reference",
    "keywords": "Class TokenType Namespace Enlighten.Tokenizer.Languages.English.Enums Assembly Enlighten.dll Token type public class TokenType : StringEnumBaseClass<TokenType> Inheritance object StringEnumBaseClass<TokenType> TokenType Inherited Members StringEnumBaseClass<TokenType>.ToStringEnumBaseClass(string) StringEnumBaseClass<TokenType>.ToString() StringEnumBaseClass<TokenType>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TokenType() Initializes a new instance of the TokenType class. public TokenType() TokenType(string) Initializes a new instance of the TokenType class. public TokenType(string value) Parameters value string The value. Properties Abbreviation Gets the abbreviation. public static TokenType Abbreviation { get; } Property Value TokenType The abbreviation. Ampersand Gets the ampersand. public static TokenType Ampersand { get; } Property Value TokenType The ampersand. Asterisk Gets the asterisk. public static TokenType Asterisk { get; } Property Value TokenType The asterisk. AtSymbol Gets at symbol. public static TokenType AtSymbol { get; } Property Value TokenType At symbol. Backslash Gets the backslash. public static TokenType Backslash { get; } Property Value TokenType The backslash. Backtick Gets the backtick. public static TokenType Backtick { get; } Property Value TokenType The backtick. Caret Gets the caret. public static TokenType Caret { get; } Property Value TokenType The caret. Colon Gets the colon. public static TokenType Colon { get; } Property Value TokenType The colon. Comma Gets the comma. public static TokenType Comma { get; } Property Value TokenType The comma. DollarSymbol Gets the dollar symbol. public static TokenType DollarSymbol { get; } Property Value TokenType The dollar symbol. DoubleQuote Gets the double quote. public static TokenType DoubleQuote { get; } Property Value TokenType The double quote. EOF Gets the EOF. public static TokenType EOF { get; } Property Value TokenType The EOF. Ellipsis Gets the ellipsis. public static TokenType Ellipsis { get; } Property Value TokenType The ellipsis. Email Gets the email. public static TokenType Email { get; } Property Value TokenType The email. Emoji Gets the emoji. public static TokenType Emoji { get; } Property Value TokenType The emoji. EqualsToken Gets the equals. public static TokenType EqualsToken { get; } Property Value TokenType The equals. ExclamationMark Gets the exclamation mark. public static TokenType ExclamationMark { get; } Property Value TokenType The exclamation mark. GreaterThan Gets the greater than. public static TokenType GreaterThan { get; } Property Value TokenType The greater than. HashSymbol Gets the hash symbol. public static TokenType HashSymbol { get; } Property Value TokenType The hash symbol. HashTag Gets the hash tag. public static TokenType HashTag { get; } Property Value TokenType The hash tag. Hyphen Gets the hyphen. public static TokenType Hyphen { get; } Property Value TokenType The hyphen. LeftBrace Gets the left brace. public static TokenType LeftBrace { get; } Property Value TokenType The left brace. LeftBracket Gets the left bracket. public static TokenType LeftBracket { get; } Property Value TokenType The left bracket. LeftParen Gets the left paren. public static TokenType LeftParen { get; } Property Value TokenType The left paren. LessThan Gets the less than. public static TokenType LessThan { get; } Property Value TokenType The less than. NewLine Gets the new line. public static TokenType NewLine { get; } Property Value TokenType The new line. Number Gets the number. public static TokenType Number { get; } Property Value TokenType The number. Other Gets the other. public static TokenType Other { get; } Property Value TokenType The other. PercentSymbol Gets the percent symbol. public static TokenType PercentSymbol { get; } Property Value TokenType The percent symbol. Period Gets the period. public static TokenType Period { get; } Property Value TokenType The period. Pipe Gets the pipe. public static TokenType Pipe { get; } Property Value TokenType The pipe. Plus Gets the plus. public static TokenType Plus { get; } Property Value TokenType The plus. QuestionMark Gets the question mark. public static TokenType QuestionMark { get; } Property Value TokenType The question mark. RightBrace Gets the right brace. public static TokenType RightBrace { get; } Property Value TokenType The right brace. RightBracket Gets the right bracket. public static TokenType RightBracket { get; } Property Value TokenType The right bracket. RightParen Gets the right paren. public static TokenType RightParen { get; } Property Value TokenType The right paren. SemiColon Gets the semi colon. public static TokenType SemiColon { get; } Property Value TokenType The semi colon. SingleQuote Gets the single quote. public static TokenType SingleQuote { get; } Property Value TokenType The single quote. Slash Gets the slash. public static TokenType Slash { get; } Property Value TokenType The slash. Tilde Gets the tilde. public static TokenType Tilde { get; } Property Value TokenType The tilde. Underscore Gets the underscore. public static TokenType Underscore { get; } Property Value TokenType The underscore. Url Gets the URL. public static TokenType Url { get; } Property Value TokenType The URL. Username Gets the username. public static TokenType Username { get; } Property Value TokenType The username. WhiteSpace Gets the white space. public static TokenType WhiteSpace { get; } Property Value TokenType The white space. Word Gets the word. public static TokenType Word { get; } Property Value TokenType The word. See Also StringEnumBaseClass<TClass>"
  },
  "api/Enlighten.Tokenizer.Languages.English.Enums.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.Enums.html",
    "title": "Namespace Enlighten.Tokenizer.Languages.English.Enums | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Languages.English.Enums Classes TokenType Token type"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Abbreviation.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Abbreviation.html",
    "title": "Class Abbreviation | Enlighten API Reference",
    "keywords": "Class Abbreviation Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Abbreviation finder. public class Abbreviation : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Abbreviation Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Ellipsis.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Ellipsis.html",
    "title": "Class Ellipsis | Enlighten API Reference",
    "keywords": "Class Ellipsis Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Finds ellipsis public class Ellipsis : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Ellipsis Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Email.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Email.html",
    "title": "Class Email | Enlighten API Reference",
    "keywords": "Class Email Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Email token finder public class Email : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Email Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Emoji.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Emoji.html",
    "title": "Class Emoji | Enlighten API Reference",
    "keywords": "Class Emoji Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Emoji finder public class Emoji : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Emoji Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.HashTag.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.HashTag.html",
    "title": "Class HashTag | Enlighten API Reference",
    "keywords": "Class HashTag Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll HashTag finder public class HashTag : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass HashTag Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.NewLine.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.NewLine.html",
    "title": "Class NewLine | Enlighten API Reference",
    "keywords": "Class NewLine Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll New line finder public class NewLine : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass NewLine Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Number.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Number.html",
    "title": "Class Number | Enlighten API Reference",
    "keywords": "Class Number Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Number finder public class Number : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Number Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.OtherTokenFinder.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.OtherTokenFinder.html",
    "title": "Class OtherTokenFinder | Enlighten API Reference",
    "keywords": "Class OtherTokenFinder Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Other token finder public class OtherTokenFinder : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass OtherTokenFinder Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.RomanNumerals.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.RomanNumerals.html",
    "title": "Class RomanNumerals | Enlighten API Reference",
    "keywords": "Class RomanNumerals Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Number finder public class RomanNumerals : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass RomanNumerals Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods ConvertToNumber(string) Converts to number. public string ConvertToNumber(string value) Parameters value string The result. Returns string The number value. IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Symbol.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Symbol.html",
    "title": "Class Symbol | Enlighten API Reference",
    "keywords": "Class Symbol Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Symbol class public class Symbol : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Symbol Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) Determines whether [is match implementation] [the specified tokenizer]. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.URL.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.URL.html",
    "title": "Class URL | Enlighten API Reference",
    "keywords": "Class URL Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll URL finder public class URL : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass URL Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Username.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Username.html",
    "title": "Class Username | Enlighten API Reference",
    "keywords": "Class Username Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Username finder public class Username : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Username Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Whitespace.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Whitespace.html",
    "title": "Class Whitespace | Enlighten API Reference",
    "keywords": "Class Whitespace Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Whitespace token finder public class Whitespace : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Whitespace Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Word.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.Word.html",
    "title": "Class Word | Enlighten API Reference",
    "keywords": "Class Word Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Assembly Enlighten.dll Word token finder public class Word : TokenFinderBaseClass, IEnglishTokenFinder Inheritance object TokenFinderBaseClass Word Implements IEnglishTokenFinder Inherited Members TokenFinderBaseClass.IsMatch(TokenizableStream<char>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods IsMatchImpl(TokenizableStream<char>) The actual implementation of the IsMatch done by the individual classes. protected override Token? IsMatchImpl(TokenizableStream<char> tokenizer) Parameters tokenizer TokenizableStream<char> The tokenizer. Returns Token The token. See Also TokenFinderBaseClass"
  },
  "api/Enlighten.Tokenizer.Languages.English.TokenFinders.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.TokenFinders.html",
    "title": "Namespace Enlighten.Tokenizer.Languages.English.TokenFinders | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Languages.English.TokenFinders Classes Abbreviation Abbreviation finder. Ellipsis Finds ellipsis Email Email token finder Emoji Emoji finder HashTag HashTag finder NewLine New line finder Number Number finder OtherTokenFinder Other token finder RomanNumerals Number finder Symbol Symbol class URL URL finder Username Username finder Whitespace Whitespace token finder Word Word token finder"
  },
  "api/Enlighten.Tokenizer.Languages.English.html": {
    "href": "api/Enlighten.Tokenizer.Languages.English.html",
    "title": "Namespace Enlighten.Tokenizer.Languages.English | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Languages.English Classes EnglishLanguage English language"
  },
  "api/Enlighten.Tokenizer.Languages.Interfaces.IEnglishTokenFinder.html": {
    "href": "api/Enlighten.Tokenizer.Languages.Interfaces.IEnglishTokenFinder.html",
    "title": "Interface IEnglishTokenFinder | Enlighten API Reference",
    "keywords": "Interface IEnglishTokenFinder Namespace Enlighten.Tokenizer.Languages.Interfaces Assembly Enlighten.dll English token finder public interface IEnglishTokenFinder Properties Order Gets the order. int Order { get; } Property Value int The order. Methods IsMatch(TokenizableStream<char>) Determines whether the next set of item on the stream matches this finder. Token? IsMatch(TokenizableStream<char> stream) Parameters stream TokenizableStream<char> The stream. Returns Token The token."
  },
  "api/Enlighten.Tokenizer.Languages.Interfaces.html": {
    "href": "api/Enlighten.Tokenizer.Languages.Interfaces.html",
    "title": "Namespace Enlighten.Tokenizer.Languages.Interfaces | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Languages.Interfaces Interfaces IEnglishTokenFinder English token finder"
  },
  "api/Enlighten.Tokenizer.Token.html": {
    "href": "api/Enlighten.Tokenizer.Token.html",
    "title": "Class Token | Enlighten API Reference",
    "keywords": "Class Token Namespace Enlighten.Tokenizer Assembly Enlighten.dll Token data holder public class Token Inheritance object Token Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Token(int, int, string, string) Initializes a new instance of the Token class. public Token(int endPosition, int startPosition, string tokenType, string value) Parameters endPosition int The end position. startPosition int The start position. tokenType string Type of the token. value string The value. Properties EndPosition Gets or sets the end position. (inclusive) public int EndPosition { get; set; } Property Value int The end position. Entity Gets or sets a value indicating whether this instance is entity. public bool Entity { get; set; } Property Value bool true if this instance is entity; otherwise, false. EntityType Gets or sets the type of the entity. public string? EntityType { get; set; } Property Value string The type of the entity. NormalizedValue Gets or sets the normalized value. public string NormalizedValue { get; set; } Property Value string The normalized value. PartOfSpeech Gets or sets the part of speech. public string? PartOfSpeech { get; set; } Property Value string The part of speech. ReplacementValue Gets or sets the replacement value. public string? ReplacementValue { get; set; } Property Value string The replacement value. StartPosition Gets or sets the start position. (inclusive) public int StartPosition { get; set; } Property Value int The start position. StemmedValue Gets or sets the stemmed value. public string? StemmedValue { get; set; } Property Value string The stemmed value. StopWord Gets or sets a value indicating whether [stop word]. public bool StopWord { get; set; } Property Value bool true if [stop word]; otherwise, false. TokenType Gets or sets the type of the token. public string TokenType { get; set; } Property Value string The type of the token. Value Gets or sets the value. public string Value { get; set; } Property Value string The value. Methods Copy() Copies this instance. public Token Copy() Returns Token A copy of this instance. Join(Token) Joins the specified token with this one. public Token Join(Token token) Parameters token Token The token. Returns Token A new instance of the token. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance."
  },
  "api/Enlighten.Tokenizer.Utils.TokenizableStream-1.html": {
    "href": "api/Enlighten.Tokenizer.Utils.TokenizableStream-1.html",
    "title": "Class TokenizableStream<TData> | Enlighten API Reference",
    "keywords": "Class TokenizableStream<TData> Namespace Enlighten.Tokenizer.Utils Assembly Enlighten.dll Tokenizable stream public class TokenizableStream<TData> Type Parameters TData The type of the data. Inheritance object TokenizableStream<TData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenizableStream(TData[]) Initializes a new instance of the TokenizableStream<TData> class. public TokenizableStream(TData[] content) Parameters content TData[] The content. Properties Current Gets the current item. public TData Current { get; } Property Value TData The current item. Index Gets or sets the current index. public int Index { get; set; } Property Value int The index. Length Gets the length. public int Length { get; } Property Value int The length. Methods CommitSnapshot() Commits the snapshot. public void CommitSnapshot() Consume() Consumes the next item in the stream. public void Consume() EOF(int) Determines if the look ahead amount would be after the end of file. protected bool EOF(int lookahead) Parameters lookahead int The number of items to look ahead. Returns bool True if this is the end of file, false otherwise. End() Determines if this stream is done. public bool End() Returns bool True if it is done, false otherwise. Peek(int) Peeks at the next item. public TData Peek(int lookahead) Parameters lookahead int The amount of items to look ahead. Returns TData The item at the spot specified. RollbackSnapshot() Rolls back the snapshot. public void RollbackSnapshot() Slice(int, int) Returns a slice of the array starting at startIndex and ending at endIndex. public Span<TData> Slice(int startIndex, int endIndex) Parameters startIndex int The start index. endIndex int The end index. Returns Span<TData> The span. TakeSnapshot() Takes a snapshot. public void TakeSnapshot()"
  },
  "api/Enlighten.Tokenizer.Utils.html": {
    "href": "api/Enlighten.Tokenizer.Utils.html",
    "title": "Namespace Enlighten.Tokenizer.Utils | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer.Utils Classes TokenizableStream<TData> Tokenizable stream"
  },
  "api/Enlighten.Tokenizer.html": {
    "href": "api/Enlighten.Tokenizer.html",
    "title": "Namespace Enlighten.Tokenizer | Enlighten API Reference",
    "keywords": "Namespace Enlighten.Tokenizer Classes DefaultTokenizer Default tokenizer Token Token data holder"
  },
  "api/Enlighten.html": {
    "href": "api/Enlighten.html",
    "title": "Namespace Enlighten | Enlighten API Reference",
    "keywords": "Namespace Enlighten Classes Document Document information holder Index Index Pipeline Main pipeline class"
  },
  "api/Microsoft.Extensions.DependencyInjection.CanisterRegistration.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.CanisterRegistration.html",
    "title": "Class CanisterRegistration | Enlighten API Reference",
    "keywords": "Class CanisterRegistration Namespace Microsoft.Extensions.DependencyInjection Assembly Enlighten.dll Canister registration public static class CanisterRegistration Inheritance object CanisterRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterEnlighten(ICanisterConfiguration?) Registers the library with the bootstrapper. public static ICanisterConfiguration? RegisterEnlighten(this ICanisterConfiguration? bootstrapper) Parameters bootstrapper ICanisterConfiguration The bootstrapper. Returns ICanisterConfiguration The bootstrapper"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Enlighten API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes CanisterRegistration Canister registration"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Enlighten API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Enlighten API Reference",
    "keywords": "Code using BigBook; using Enlighten.FeatureExtraction.Enum; using Enlighten.TextSummarization.Enum; using Enlighten.Tokenizer.Languages.English.Enums; using Microsoft.Extensions.DependencyInjection; namespace Enlighten.Example { internal class Program { private static void Main(string[] args) { var Services = new ServiceCollection()?.AddCanisterModules()?.BuildServiceProvider(); var DefaultPipeline = Services.GetService<Pipeline>(); var PhineasAndFerb = DefaultPipeline.Process(\"There's 104 days of summer vacation\\r\\nAnd school comes along just to end it\\r\\nSo the annual problem of our generation\\r\\nIs finding a good way to spend it\\r\\nLike maybe\\r\\nBuilding a rocket\\r\\nOr fighting a mummy\\r\\nOr climbing up the Eiffel Tower\\r\\nDiscovering something that doesn't exist (Hey!)\\r\\nOr giving a monkey a shower\\r\\nSurfing a tidal wave\\r\\nCreating nanobots\\r\\nOr locating Frankenstein's brain (It's over here!)\\r\\nFinding a dodo bird\\r\\nPainting a continent\\r\\nOr driving their sister insane (Phineas!)\\r\\nAs you can see, there's a whole lot of stuff to do\\r\\nBefore school starts this fall (Come on, Perry!)\\r\\nSo stick with us, cause Phineas and Ferb\\r\\nAre gonna do it all\\r\\nSo stick with us, cause Phineas and Ferb\\r\\nAre gonna do it all\\r\\n(Mom! Phineas and Ferb are making a title sequence!)\"); var WordCrimes = DefaultPipeline.Process(\"[Intro]\\r\\nEverybody shut up! (Woo!)\\r\\nEveryone listen up!\\r\\nHey, hey, hey\\r\\nHey, hey, hey (Uh, woo!)\\r\\nHey, hey, hey (Woo!)\\r\\n\\r\\n[Verse 1]\\r\\nIf you can't write in the proper way (Woo!)\\r\\nIf you don't know how to conjugate (Woo!)\\r\\nHey, maybe you flunked that class (Hey, hey, hey)\\r\\nAnd maybe now you find (Hey, hey, hey)\\r\\nThat people mock you online (Hey, hey, hey)\\r\\n(Everybody wise up!)\\r\\n\\r\\n[Verse 2]\\r\\nOkay, now here's the deal\\r\\nI'll try to educate ya (Woo!) (Ow!)\\r\\nGonna familiarize\\r\\nYou with the nomenclature (Woo!) (Meow!)\\r\\nYou'll learn the definitions (Hey, hey, hey)\\r\\nOf nouns and prepositions (Hey, hey, hey)\\r\\nLiteracy's your mission (Hey, hey, hey)\\r\\n\\r\\n[Pre-Chorus]\\r\\nAnd that's why I think it's a good time (Woo!)\\r\\nTo learn some grammar (What)\\r\\nNow, did I stammer?\\r\\nWork on that grammar (Woo!)\\r\\nYou should know when\\r\\nIt's \\\"less\\\" or it's \\\"fewer\\\" (Woo!) (Oh, yeah)\\r\\nLike people who were (All right)\\r\\nNever raised in a sewer\\r\\nYou might also like\\r\\nAmish Paradise\\r\\n“Weird Al” Yankovic\\r\\nFoil\\r\\n“Weird Al” Yankovic\\r\\nWhite & Nerdy\\r\\n“Weird Al” Yankovic\\r\\n[Chorus 1]\\r\\nI hate these word crimes\\r\\nLike \\\"I could care less\\\" (Hey, hey, hey)\\r\\nThat means you do care (Whoa)\\r\\nAt least a little\\r\\nDon't be a moron (Hey, hey)\\r\\nYou'd better slow down\\r\\nAnd use the right pronoun (Hey, hey)\\r\\nShow the world you're no clown\\r\\n(Everybody wise up!)\\r\\n\\r\\n[Verse 2]\\r\\nSay you've got an \\\"i-t\\\"\\r\\nFollowed by apostrophe \\\"s\\\" (Woo!)\\r\\nNow, what does that mean?\\r\\nYou would not use \\\"it's\\\" in this case (Woo!)\\r\\nAs a possessive (No, no, no!)\\r\\nIt's a contraction (Yeah, yeah, yeah!)\\r\\nWhat's a contraction?\\r\\nWell, it's the shortening of a word or a group of words\\r\\nBy omission of a sound or letter (Woo!)\\r\\n\\r\\n[Pre-Chorus 2]\\r\\nOkay, now here are some notes\\r\\nSyntax you're always mangling (Woo!)\\r\\nNo X in \\\"espresso\\\"\\r\\nYour participle's danglin' (Uh-huh)\\r\\nBut I don't want your drama (Hey, hey, hey) (Uh-huh)\\r\\nIf you really wanna (Hey, hey, hey) (Uh-huh)\\r\\nLeave out that Oxford comma (Hey, hey, hey) (Uh-huh)\\r\\n[Chorus 2]\\r\\nJust keep in mind that\\r\\n\\\"Be\\\", \\\"see\\\", \\\"are\\\", \\\"you\\\"\\r\\nAre words, not letters (Woo!)\\r\\nGet it together (Hey, hey)\\r\\nUse your spell checker\\r\\nYou should never\\r\\nWrite words using numbers (Woo!) (Hey, hey)\\r\\nUnless you're seven (Yeah-ay)\\r\\nOr your name is Prince\\r\\n(Everybody wise up!)\\r\\n\\r\\n[Chorus 1]\\r\\nI hate these word crimes (I hate them crimes)\\r\\nYou really need a (Woo!) (I hate them crimes)\\r\\nFull-time proofreader (I mean those crimes)\\r\\nYou dumb mouth-breather (Woo!)\\r\\nWell, you should hire (I'll hire)\\r\\nSome cunning linguist (Woo!)\\r\\nTo help you distinguish\\r\\nWhat is proper English\\r\\n(Everybody wise up!)\\r\\n\\r\\n[Bridge]\\r\\nOne thing I ask of you (Okay)\\r\\nTime to learn your homophones is past due (Woo!)\\r\\nLearn to diagram a sentence, too\\r\\nAlways say \\\"to whom\\\", don't ever say \\\"to who\\\" (Woo!)\\r\\nAnd listen up when I tell you this\\r\\nI hope you never use quotation marks for emphasis (Woo!)\\r\\nYou finished second grade, I hope you can tell\\r\\nIf you're doing good or doing well (Woo!)\\r\\nYou better figure out the difference\\r\\nIrony is not coincidence (Woo!)\\r\\nAnd I thought that you'd gotten it through your skull\\r\\nAbout what's figurative and what's literal (Woo!)\\r\\nOh, but just now (Just now), you said (You said)\\r\\nYou \\\"literally\\\" couldn't get out of bed (Woo!) (What?)\\r\\nThat really makes me want to literally\\r\\nSmack a crowbar upside your stupid head\\r\\n[Pre-Chorus]\\r\\nI read your e-mail (Yeah, yeah)\\r\\nIt's quite apparent (Woo!)\\r\\nYour grammar's errant\\r\\nYou're incoherent (Woo!)\\r\\nSaw your blog post (Hey, hey)\\r\\nIt's really fantastic (Oh, woah)\\r\\nThat was sarcastic (Oh, psych!)\\r\\n'Cause you write like a spastic (Woo!)\\r\\n\\r\\n[Chorus 1]\\r\\nI hate these word crimes (Everybody wise up)\\r\\nYour prose is dopey (Woo!) (Hey)\\r\\nThink you should only (Woah, woah)\\r\\nWrite in emoji (Woo!)\\r\\nOh, you're a lost cause (Hey, hey, hey)\\r\\nGo back to preschool (Woo!)\\r\\nGet out of the gene pool (Hey, hey, hey)\\r\\nTry your best to not drool (Woo!)\\r\\n\\r\\n[Outro]\\r\\nNever mind, I give up (Woo!)\\r\\nReally now, I give up (Woo!)\\r\\nHey, hey, hey\\r\\nHey, hey, hey\\r\\nGo away!\"); var FreshPrince = DefaultPipeline.Process(\"Now this is the story all about how,\\r\\nMy life got flipped-turned upside down,\\r\\nAnd I'd like to take a minute, just sit right there,\\r\\nI'll tell you how I became the prince of a town called Bel Air.\\r\\n\\r\\nIn West Philadelphia, born and raised\\r\\nOn the playground is where I spent most of my days.\\r\\nChillin' out, maxin', relaxin all cool,\\r\\nAnd all shootin' some B-ball outside of the school.\\r\\n\\r\\nWhen a couple of guys who were up to no good,\\r\\nStarted makin' trouble in my neighborhood.\\r\\nI got in one little fight and my mom got scared,\\r\\nAnd said \\\"You're movin' with your auntie and uncle in Bel Air.\\\"\\r\\n\\r\\nI whistled for a cab, and when it came near,\\r\\nThe license plate said \\\"fresh\\\" and it had dice in the mirror.\\r\\nIf anything I could say that this cab was rare,\\r\\nBut I thought \\\"Nah forget it, Yo home to Bel Air.\\\"\\r\\n\\r\\nI pulled up to the house about seven or eight,\\r\\nand I yelled to the cabby \\\"Yo homes, smell ya later.\\\"\\r\\nLooked at my kingdom, I was finally there,\\r\\nTo sit on my throne as the Prince of Bel Air.\"); var Summary = WordCrimes.Summarize(3, TextSummarizationLanguage.EnglishDefault); Console.WriteLine($\"Summary: {Summary.Detokenize()}\"); Console.WriteLine(); var Features = WordCrimes.GetFeatures(new[] { PhineasAndFerb, FreshPrince }, 4, FeatureExtractionType.EnglishDefault); Console.WriteLine($\"Features: {Features.ToString(x => x, \", \")}\"); Console.WriteLine(); Console.WriteLine(\"Word Tokens:\"); Console.WriteLine(\"Value - Stemmed Value - Token Type - Entity Type\"); Console.WriteLine(\"------------------------------------------------\"); WordCrimes.Tokens.Where(x => x.TokenType == TokenType.Word).ForEach(x => Console.WriteLine($\"{x.Value} - {x.StemmedValue} - {x.TokenType} - {x.EntityType}\")); } } } Output Summary: Intro] Everybody shut up! Gonna familiarize You with the nomenclature (Woo!) (Meow! Verse 2] Say you've got an i-t Followed by apostrophe s\" (Woo!) Now, what does that mean? Features: Woo!, word, yeah, crimes Word Tokens: Value - Stemmed Value - Token Type - Entity Type ------------------------------------------------ Intro - intro - Word - Everybody - everybodi - Word - shut - shut - Word - up - up - Word - Woo! - woo! - Word - Everyone - everyon - Word - listen - listen - Word - up - up - Word - Hey - hey - Word - hey - hey - Word - ..."
  },
  "index.html": {
    "href": "index.html",
    "title": "Enlighten - NLP Library | Enlighten API Reference",
    "keywords": "Enlighten - NLP Library Enlighten is a simple C# library designed to assist with natural language processing (NLP) tasks. It provides a pipeline based set of tools for various NLP operations, including tokenization, sentence detection, summarization, stemming, and feature extraction. Features Enlighten offers the following key features: Tokenization: Efficiently break down text into individual tokens or words, making it easier to analyze and process textual data. Sentence Detection: Identify and extract sentences from a given piece of text. Summarization: Generate concise summaries of longer texts, allowing you to extract the most important information and reduce the overall length of the content. Stemming: Reduce words to their base or root form, enabling effective analysis by grouping variations of a word together. Feature Extraction: Extract relevant features using term frequency-inverse document frequency (TF-IDF) values, for use in machine learning or text mining tasks. Part-of-Speech (POS) Tagging: Assign linguistic tags to words in a sentence, indicating their grammatical properties, which can aid in tasks like named entity recognition or syntactic parsing. Getting Started To use Enlighten in your C# project, follow these steps: Installation: Use NuGet to pull down the package. dotnet add package Enlighten Initializing the Library: Create an instance of the Enlighten class to start using its methods and features: // Add the library and dependencies to your ServiceCollection using the AddCanisterModules method var Services = new ServiceCollection()?.AddCanisterModules()?.BuildServiceProvider(); // Get the Pipeline service from the ServiceCollection var DefaultPipeline = Services.GetService<Pipeline>(); Utilizing the NLP Tools: Once you have initialized the Enlighten library, you can utilize its various methods for tokenization, sentence detection, summarization, stemming, feature extraction, POS tagging, and more. Refer to the library's documentation or source code for detailed usage instructions and examples. Documentation For more detailed information on using Enlighten and its available methods, please refer to the official documentation. It provides usage examples and class documentation. Contributing Enlighten is an open-source project, and contributions are welcome! If you find a bug, have a feature request, or would like to contribute code improvements, please follow the guidelines in the project's GitHub repository."
  }
}